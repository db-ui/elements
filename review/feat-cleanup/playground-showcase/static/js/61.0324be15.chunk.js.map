{"version":3,"file":"static/js/61.0324be15.chunk.js","mappings":"wNAKMA,EAAQ,WACZ,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAWC,EAAAA,EAAAA,GAAYF,KAAM,WAAY,GAI9CA,KAAKG,OAAS,OAAQC,EAAAA,EAAAA,IACvB,CARW,2CASZ,SAAaC,GACXL,KAAKC,SAASK,KAAKD,EACpB,GAXW,oBAYZ,WAAS,WACP,OAAQE,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,QAAS,CAAEE,KAAM,WAAYC,KAAM,SAAUC,MAAO,aAAcC,SAAUZ,KAAKY,SAAUC,QAASb,KAAKa,QAASC,GAAId,KAAKG,OAAQY,SAAU,SAACV,GAAD,OAAW,EAAKW,aAAaX,EAA7B,KAAwCE,EAAAA,EAAAA,GAAE,QAAS,CAAEI,MAAO,YAAaM,QAASjB,KAAKG,SAAUI,EAAAA,EAAAA,GAAE,OAAQ,OACjR,KAdW,KAgBdV,EAASqB,MAlBW,gqH,4HCHpB,IAAMd,EAAO,WACX,IAGE,OAAQ,CAAC,MAAQ,KAAO,KAAO,KAAO,MAAMe,QAAQ,UAAU,SAACC,GAAD,OAAQA,EACnEC,OAAOC,gBAAgB,IAAIC,WAAW,IAAI,GAAM,IAAOH,EAAI,GAAMI,SAAS,GADf,GAS/D,CAND,MAAOC,GAEL,MAAO,uCAAuCN,QAAQ,SAAS,SAAUC,GACvE,IAAMM,EAAqB,GAAhBC,KAAKC,SAAiB,EACjC,OAD6C,KAALR,EAAWM,EAAS,EAAJA,EAAW,GAC1DF,SAAS,GACnB,GACF,CACF,EACKK,EAAqB,SAACC,GAC1B,OAAKA,EAEEA,EACJC,KAAI,SAACC,GAAD,mCAAgCA,EAAKC,KAArC,qBAAsDD,EAAKE,OAA3D,aAAsEF,EAAKG,MAA3E,sBACJC,KAAK,MAHC,EAIV,EAMKC,EAAsC,SAAtCA,EAAuCC,EAAMC,GAC7CD,EAAKE,UACPC,MAAMC,KAAKJ,EAAKE,UAAUG,SAAQ,SAACC,GACG,YAAhCA,EAAMC,QAAQC,eAChBF,EAAMG,aAAa,eAAgBR,GAEjCK,EAAMJ,UACRH,EAAoCO,EAAOL,EAE9C,GAEJ,EAKKS,EAAY,SAACC,GACjB,IACE,GAAoB,kBAATA,EACT,OAAOC,KAAKC,MAAMF,GAEpB,GAAoB,kBAATA,EACT,OAAOA,EACT,GAAIA,aAAgBR,MAClB,OAAOQ,CAIV,CAFD,MAAOG,GACL,OAAO,CACR,CACF,C","sources":["../../../packages/db-ui-elements-stencil/dist/esm/db-toggle.entry.js","../../../packages/db-ui-elements-stencil/dist/esm/utils-e9a895fb.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-60c9fafb.js';\nimport { u as uuid } from './utils-e9a895fb.js';\n\nconst dbToggleCss = \":where(html){line-height:1.15}:where(h1){font-size:2em;margin-block-end:0.67em;margin-block-start:0.67em}:where(dl,ol,ul) :where(dl,ol,ul){margin-block-end:0;margin-block-start:0}:where(hr){box-sizing:content-box;color:inherit;height:0}:where(pre){font-family:monospace, monospace;font-size:1em}:where(abbr[title]){text-decoration:underline;text-decoration:underline dotted}:where(b,strong){font-weight:bolder}:where(code,kbd,samp){font-family:monospace, monospace;font-size:1em}:where(small){font-size:80%}:where(table){border-color:currentColor;text-indent:0}:where(button,input,select){margin:0}:where(button){text-transform:none}:where(button,input:is([type=button i],[type=reset i],[type=submit i])){-webkit-appearance:button}:where(progress){vertical-align:baseline}:where(select){text-transform:none}:where(textarea){margin:0}:where(input[type=search i]){-webkit-appearance:textfield;outline-offset:-2px}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focus-inner{border-style:none;padding:0}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focusring{outline:1px dotted ButtonText}:where(:-moz-ui-invalid){box-shadow:none}:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:fit-content}:where(dialog:not([open])){display:none}:where(summary){display:list-item}html,:host{box-sizing:border-box}*,::before,::after{box-sizing:inherit}img,embed,iframe,object,video{height:auto;max-width:100%}iframe{border:0}nav ol,nav ul,[role=navigation] ol,[role=navigation] ul{list-style:none;margin:0;padding:0}:root{--db-focus-outline-offset:1px;--db-focus-outline-color:#2c95c4}:is(a,button,input,textarea,summary){--db-focus-outline-size:max(2px, 0.08em)}:is(a,button,input,textarea,summary):focus-visible{outline:var(--db-focus-outline-size) var(--db-focus-outline-style, solid) var(--db-focus-outline-color, currentColor);outline-offset:var(--db-focus-outline-offset, var(--db-focus-outline-size))}body,:host,div,button,input,select,textarea{font-family:\\\"DB Screen Sans\\\", Helvetica, Arial, sans-serif;color:#282d37;font-size:1rem;font-weight:400;line-height:1.5}a{color:inherit}.elm-toggle{appearance:none;width:3rem;height:1.5rem;display:inline-block;position:relative;border-radius:0.75rem;border:none;background-color:#646973;transition:background-color 0.3s ease}@media (prefers-reduced-motion: reduce){.elm-toggle{transition-duration:0.01s !important}}.elm-toggle+.elm-label{vertical-align:top}.elm-toggle::before{content:\\\"\\\";display:block;position:absolute;left:0.125rem;top:0.125rem;width:1.25rem;height:1.25rem;background-color:#ffffff;border-radius:0.625rem;box-shadow:0 5px 30px 0 rgba(0, 0, 0, 0.05), 0 1px 5px 0 rgba(0, 0, 0, 0.15);transition:border-color, left 0.3s cubic-bezier(0.3, 1.5, 0.7, 1)}@media (prefers-reduced-motion: reduce){.elm-toggle::before{transition-duration:0.01s !important}}.elm-toggle:hover::before{background-color:#f7f7f7}.elm-toggle:active::before{width:1.5rem;transition:width 0.3s cubic-bezier(0.3, 1.5, 0.7, 1)}@media (prefers-reduced-motion: reduce){.elm-toggle:active::before{transition-duration:0.01s !important}}.elm-toggle:checked{background-color:#131821}.elm-toggle:checked::before{left:unset;right:0.125rem}.elm-toggle:disabled,.elm-toggle:disabled+label{opacity:0.5}:host{display:block}.elm-toggle::before{box-sizing:inherit}\";\n\nconst DbToggle = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dbChange = createEvent(this, \"dbChange\", 7);\n    /**\n     * Optional id for the label - otherwise random id will be set\n     */\n    this.htmlid = 'db-' + uuid();\n  }\n  handleChange(event) {\n    this.dbChange.emit(event);\n  }\n  render() {\n    return (h(Host, null, h(\"input\", { type: \"checkbox\", role: \"switch\", class: \"elm-toggle\", disabled: this.disabled, checked: this.checked, id: this.htmlid, onChange: (event) => this.handleChange(event) }), h(\"label\", { class: \"elm-label\", htmlFor: this.htmlid }, h(\"slot\", null))));\n  }\n};\nDbToggle.style = dbToggleCss;\n\nexport { DbToggle as db_toggle };\n","const uuid = () => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) => (c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16));\n  }\n  catch (_) {\n    // this is only for jest tests\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n};\nconst getDefaultLinkData = (compData) => {\n  if (!compData)\n    return '';\n  return compData\n    .map((data) => `<li><db-link href=\"${data.href}\" target=\"${data.target}\">${data.label}</db-link></li>`)\n    .join('\\n');\n};\n/**\n * Adds the given variant as attribute for all db-links\n * @param host the stencil host element\n * @param variant icon variant\n */\nconst addIconVariantToAllDbLinksRecursive = (host, variant) => {\n  if (host.children) {\n    Array.from(host.children).forEach((child) => {\n      if (child.tagName.toLowerCase() === 'db-link') {\n        child.setAttribute('icon-variant', variant);\n      }\n      if (child.children) {\n        addIconVariantToAllDbLinksRecursive(child, variant);\n      }\n    });\n  }\n};\n/**\n * Without framework (Angular, React, Vue) we will need to pass a data as\n * string.\n */\nconst parseData = (item) => {\n  try {\n    if (typeof item === 'string') {\n      return JSON.parse(item);\n    }\n    if (typeof item === 'object')\n      return item;\n    if (item instanceof Array)\n      return item;\n  }\n  catch (error) {\n    return false;\n  }\n};\n\nexport { addIconVariantToAllDbLinksRecursive as a, getDefaultLinkData as g, parseData as p, uuid as u };\n"],"names":["DbToggle","hostRef","registerInstance","this","dbChange","createEvent","htmlid","uuid","event","emit","h","Host","type","role","class","disabled","checked","id","onChange","handleChange","htmlFor","style","replace","c","crypto","getRandomValues","Uint8Array","toString","_","r","Math","random","getDefaultLinkData","compData","map","data","href","target","label","join","addIconVariantToAllDbLinksRecursive","host","variant","children","Array","from","forEach","child","tagName","toLowerCase","setAttribute","parseData","item","JSON","parse","error"],"sourceRoot":""}