{"version":3,"file":"static/js/201.49b6175d.chunk.js","mappings":"oNAOaA,EAAc,W,2DAK8BC,KAAKC,a,iBA8B3D,O,kCAlBO,WACN,MAAqB,UAAdD,KAAKE,MAAkC,YAAdF,KAAKE,KACjC,QACA,Q,GACL,CAAAC,IAAA,SAAAC,MAED,WACE,OACEC,EAAAA,EAAAA,GAAA,OACEC,MAAM,mBACNC,KAAMP,KAAKQ,QAAO,YACPR,KAAKE,KAAOF,KAAKE,KAAO,OAEnCG,EAAAA,EAAAA,GAAA,QAAMI,KAAK,qBACXJ,EAAAA,EAAAA,GAAA,cACAA,EAAAA,EAAAA,GAAA,QAAMI,KAAK,qB,KAGhBV,CAAA,CAnCwB,G,QCPD,osI","sources":["../../../packages/db-ui-elements-stencil/dist/esm/src/components/db-notification/db-notification.tsx","../../../packages/db-ui-elements-stencil/dist/esm/src/components/db-notification/db-notification.scss?tag=db-notification"],"sourcesContent":["import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'db-notification',\n  styleUrl: 'db-notification.scss',\n  scoped: false\n})\nexport class DbNotification {\n  /**\n   * Variant will be added to the element containing the alert or status message\n   * that will be read aloud by screen readers.\n   */\n  @Prop({ reflect: true }) variant: 'alert' | 'status' = this.getVariant();\n\n  /**\n   * The type attribute is used to set the type of the notification, will change\n   * styling accordingly.\n   */\n  @Prop({ reflect: true }) type:\n    | 'error'\n    | 'informative'\n    | 'success'\n    | 'warning';\n\n  private getVariant() {\n    return this.type === 'error' || this.type === 'warning'\n      ? 'alert'\n      : 'status';\n  }\n\n  render() {\n    return (\n      <div\n        class=\"cmp-notification\"\n        role={this.variant}\n        data-type={this.type ? this.type : null}\n      >\n        <slot name=\"prenotification\"></slot>\n        <slot></slot>\n        <slot name=\"postnotification\"></slot>\n      </div>\n    );\n  }\n}\n","@import 'db-ui-core.general';\n@import 'notification';\n\n*[slot='prenotification'] {\n  padding-right: 10px;\n}\n\n*[slot='postnotification'] {\n  float: right;\n}\n"],"names":["DbNotification","this","getVariant","type","key","value","h","class","role","variant","name"],"sourceRoot":""}