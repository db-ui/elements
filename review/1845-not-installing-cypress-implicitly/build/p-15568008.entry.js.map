{"version":3,"names":["dbImageCss","DbImage","uuid","getBasicImage","h","class","alt","this","src","width","srcSet","srcset","height","loading","caption","ariaid","basicImageCaptionWrapper","undefined","id","getPictureWrapper","fileExtension","modernformat","split","pop","toLowerCase","type","getResponsivePictureWrapper","JSON","parse","responsivemediaquery","map","query","index","key","media","pictureCaptionWrapper","render","Host"],"sources":["src/components/db-image/db-image.scss?tag=db-image&encapsulation=scoped","src/components/db-image/db-image.tsx"],"sourcesContent":["@import 'db-ui-core.general';\n@import 'image';\n\nfigure {\n  margin: 0;\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { uuid } from '../../utils/utils';\n\n@Component({\n  tag: 'db-image',\n  styleUrl: 'db-image.scss',\n  scoped: true\n})\nexport class DbImage {\n  /**\n   * The image src URL.\n   */\n  @Prop({ reflect: true }) src!: string;\n  /**\n   * Optional modern image format srcset URL (like avif or webp).\n   */\n  @Prop({ reflect: false }) modernformat: string;\n  /**\n   * Optional srcset for high density images\n   */\n  @Prop({ reflect: false }) srcset: string;\n  /**\n   * The alt attribute is used by \"screen reader\" software so that a person who is listening to the content of a webpage (for instance, a person who is blind) can interact with this element.\n   */\n  @Prop({ reflect: true }) alt!: string;\n\n  /**\n   * Width for the image\n   */\n  @Prop({ reflect: true }) width!: number;\n\n  /**\n   * Height for the image\n   */\n  @Prop({ reflect: true }) height!: number;\n  /**\n   * Optional lazy loading attribute\n   */\n  @Prop({ reflect: false }) loading: 'lazy';\n  /**\n   * Optional caption for the image\n   */\n  @Prop({ reflect: false }) caption: string;\n  /**\n   * Optional responsive media queries as array of objects '[{srcset:\"/path/to/picture.extension\", media:\"(min-width: 768px)\"}]'\n   */\n  @Prop({ reflect: false }) responsivemediaquery: string;\n  /**\n   * Optional id for the caption aria label - otherwise random id will be set\n   */\n  @Prop({ reflect: false }) ariaid: string = 'image-' + uuid();\n\n  private getBasicImage() {\n    return (\n      <img\n        class=\"elm-image\"\n        alt={this.alt}\n        src={this.src}\n        width={this.width}\n        srcSet={this.srcset}\n        height={this.height}\n        loading={this.loading}\n        aria-labelledby={this.caption && this.ariaid}\n      />\n    );\n  }\n  private basicImageCaptionWrapper() {\n    if (this.caption !== undefined) {\n      return (\n        <figure>\n          {this.getBasicImage()}\n          <figcaption id={this.ariaid}>{this.caption}</figcaption>\n        </figure>\n      );\n    } else {\n      {\n        return this.getBasicImage();\n      }\n    }\n  }\n\n  private getPictureWrapper() {\n    const fileExtension = this.modernformat.split('.').pop().toLowerCase();\n    return (\n      <picture>\n        <source srcSet={this.modernformat} type={`'image/${fileExtension}`} />\n        {this.getBasicImage()}\n      </picture>\n    );\n  }\n  private getResponsivePictureWrapper() {\n    return (\n      <picture>\n        {JSON.parse(this.responsivemediaquery).map((query, index) => (\n          <source\n            key={`picture-${index}`}\n            srcSet={query.srcset}\n            media={query.media}\n          />\n        ))}\n        {this.getBasicImage()}\n      </picture>\n    );\n  }\n\n  private pictureCaptionWrapper() {\n    if (this.caption !== undefined) {\n      return (\n        <figure>\n          {this.getPictureWrapper()}\n          <figcaption id={this.ariaid}>{this.caption}</figcaption>\n        </figure>\n      );\n    } else {\n      {\n        return this.getPictureWrapper();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {(this.modernformat && this.pictureCaptionWrapper()) ||\n          (this.responsivemediaquery && this.getResponsivePictureWrapper()) ||\n          this.basicImageCaptionWrapper()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAa,66H,MCQNC,EAAO,M,0PA0CyB,SAAWC,G,CAE9C,aAAAC,GACN,OACEC,EAAA,OACEC,MAAM,YACNC,IAAKC,KAAKD,IACVE,IAAKD,KAAKC,IACVC,MAAOF,KAAKE,MACZC,OAAQH,KAAKI,OACbC,OAAQL,KAAKK,OACbC,QAASN,KAAKM,QAAO,kBACJN,KAAKO,SAAWP,KAAKQ,Q,CAIpC,wBAAAC,GACN,GAAIT,KAAKO,UAAYG,UAAW,CAC9B,OACEb,EAAA,cACGG,KAAKJ,gBACNC,EAAA,cAAYc,GAAIX,KAAKQ,QAASR,KAAKO,S,KAGlC,CACL,CACE,OAAOP,KAAKJ,e,GAKV,iBAAAgB,GACN,MAAMC,EAAgBb,KAAKc,aAAaC,MAAM,KAAKC,MAAMC,cACzD,OACEpB,EAAA,eACEA,EAAA,UAAQM,OAAQH,KAAKc,aAAcI,KAAM,UAAUL,MAClDb,KAAKJ,gB,CAIJ,2BAAAuB,GACN,OACEtB,EAAA,eACGuB,KAAKC,MAAMrB,KAAKsB,sBAAsBC,KAAI,CAACC,EAAOC,IACjD5B,EAAA,UACE6B,IAAK,WAAWD,IAChBtB,OAAQqB,EAAMpB,OACduB,MAAOH,EAAMG,UAGhB3B,KAAKJ,gB,CAKJ,qBAAAgC,GACN,GAAI5B,KAAKO,UAAYG,UAAW,CAC9B,OACEb,EAAA,cACGG,KAAKY,oBACNf,EAAA,cAAYc,GAAIX,KAAKQ,QAASR,KAAKO,S,KAGlC,CACL,CACE,OAAOP,KAAKY,mB,GAKlB,MAAAiB,GACE,OACEhC,EAACiC,EAAI,KACD9B,KAAKc,cAAgBd,KAAK4B,yBACzB5B,KAAKsB,sBAAwBtB,KAAKmB,+BACnCnB,KAAKS,2B"}