{"version":3,"file":"static/js/530.427516fb.chunk.js","mappings":"8LACe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXAD,GAAM,EAAAE,EAAA,GAAcF,MACTD,EACTI,OAAOC,eAAeL,EAAKC,EAAK,CAC9BC,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZR,EAAIC,GAAOC,EAENF,CACT,C,4CCTMS,EAAU,WACd,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKV,WAAQW,EACbD,KAAKE,SAAMD,EACXD,KAAKG,OAAS,aAAcC,EAAAA,EAAAA,KAC5BJ,KAAKK,eAAiB,IACtBL,KAAKM,YAASL,EACdD,KAAKO,eAAgB,CACvB,CAKC,OALA,8BACD,WACE,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,iBAAkBD,EAAAA,EAAAA,GAAE,WAAYhB,OAAOkB,OAAO,CAAEpB,MAAOU,KAAKV,MAAOY,IAAKF,KAAKE,IAAKS,GAAIX,KAAKG,QAAU,CAAEI,cAAeP,KAAKO,eAAiB,CAAEK,OAAuB,IAAhBZ,KAAKM,OAAe,KAC1L,mBAAkB,UAAMN,KAAKV,QAAK,KAClC,GAAK,IAAM,mBAAoBU,KAAKG,OAAS,aAAeH,KAAKO,gBAAkBC,EAAAA,EAAAA,GAAE,QAAS,CAAEK,QAASb,KAAKG,OAAQQ,GAAIX,KAAKG,OAAS,SAAU,cAAe,QAAUH,KAAKV,MAAOU,KAAKK,gBACvM,KAAC,EAda,GAgBhBR,EAAWe,MAlBW,8pO,4HCHtB,IAAMR,EAAO,WACX,IAAIU,EACJ,OAAiC,QAAxBA,EAAKC,OAAOC,cAA2B,IAAPF,OAAgB,EAASA,EAAGG,eAAiBC,KAAKC,SAASC,UACtG,EACMC,EAAqB,SAACC,GAC1B,OAAKA,EAEEA,EACJC,KAAI,SAACC,GAAI,mCAA2BA,EAAKC,KAAI,qBAAaD,EAAKE,OAAM,aAAKF,EAAKG,MAAK,sBACpFC,KAAK,MAHC,EAIX,EAMMC,EAAsC,SAAtCA,EAAuCC,EAAMC,GAC7CD,EAAKE,UACPC,MAAMC,KAAKJ,EAAKE,UAAUG,SAAQ,SAACC,GACG,YAAhCA,EAAMC,QAAQC,eAChBF,EAAMG,aAAa,eAAgBR,GAEjCK,EAAMJ,UACRH,EAAoCO,EAAOL,EAE/C,GAEJ,EAKMS,EAAY,SAACC,GACjB,IACE,GAAoB,kBAATA,EACT,OAAOC,KAAKC,MAAMF,GAEpB,GAAoB,kBAATA,EACT,OAAOA,EACT,GAAIA,aAAgBR,MAClB,OAAOQ,CAIX,CAFA,MAAOG,GACL,OAAO,CACT,CACF,C","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../packages/db-ui-elements-stencil/dist/esm/db-progress.entry.js","../../../packages/db-ui-elements-stencil/dist/esm/utils-a63157eb.js"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { r as registerInstance, h } from './index-545aea95.js';\nimport { u as uuid } from './utils-a63157eb.js';\n\nconst dbProgressCss = \"@charset \\\"UTF-8\\\";.sc-db-progress:where(html){line-height:1.15}.sc-db-progress:where(h1){font-size:2em;margin-block-end:0.67em;margin-block-start:0.67em}.sc-db-progress:where(dl,ol.sc-db-progress,ul).sc-db-progress .sc-db-progress:where(dl,ol.sc-db-progress,ul).sc-db-progress{margin-block-end:0;margin-block-start:0}.sc-db-progress:where(hr){box-sizing:content-box;color:inherit;height:0}.sc-db-progress:where(pre){font-family:monospace, monospace;font-size:1em}.sc-db-progress:where(abbr[title]){text-decoration:underline;text-decoration:underline dotted}.sc-db-progress:where(b,strong).sc-db-progress{font-weight:bolder}.sc-db-progress:where(code,kbd.sc-db-progress,samp).sc-db-progress{font-family:monospace, monospace;font-size:1em}.sc-db-progress:where(small){font-size:80%}.sc-db-progress:where(table){border-color:currentColor;text-indent:0}.sc-db-progress:where(button,input.sc-db-progress,select).sc-db-progress{margin:0}.sc-db-progress:where(button){text-transform:none}.sc-db-progress:where(button,input.sc-db-progress:is([type=button i],[type=reset i].sc-db-progress,[type=submit i])).sc-db-progress{-webkit-appearance:button}.sc-db-progress:where(progress){vertical-align:baseline}.sc-db-progress:where(select){text-transform:none}.sc-db-progress:where(textarea){margin:0}.sc-db-progress:where(input[type=search i]){-webkit-appearance:textfield;outline-offset:-2px}.sc-db-progress::-webkit-inner-spin-button,.sc-db-progress::-webkit-outer-spin-button{height:auto}.sc-db-progress::-webkit-input-placeholder{color:inherit;opacity:0.54}.sc-db-progress::-webkit-search-decoration{-webkit-appearance:none}.sc-db-progress::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.sc-db-progress:where(button,input.sc-db-progress:is([type=button i],[type=color i].sc-db-progress,[type=reset i].sc-db-progress,[type=submit i])).sc-db-progress::-moz-focus-inner{border-style:none;padding:0}.sc-db-progress:where(button,input.sc-db-progress:is([type=button i],[type=color i].sc-db-progress,[type=reset i].sc-db-progress,[type=submit i])).sc-db-progress::-moz-focusring{outline:1px dotted ButtonText}.sc-db-progress:where(:-moz-ui-invalid){box-shadow:none}.sc-db-progress:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:fit-content}.sc-db-progress:where(dialog:not([open])){display:none}.sc-db-progress:where(summary){display:list-item}html.sc-db-progress,.sc-db-progress-h{box-sizing:border-box}*.sc-db-progress,.sc-db-progress::before,.sc-db-progress::after{box-sizing:inherit}img.sc-db-progress,embed.sc-db-progress,iframe.sc-db-progress,object.sc-db-progress,video.sc-db-progress{height:auto;max-width:100%}iframe.sc-db-progress{border:0}nav.sc-db-progress ol.sc-db-progress,nav.sc-db-progress ul.sc-db-progress,[role=navigation].sc-db-progress ol.sc-db-progress,[role=navigation].sc-db-progress ul.sc-db-progress{list-style:none;margin:0;padding:0}.sc-db-progress:root{--db-focus-outline-offset:1px;--db-focus-outline-color:#2c95c4}.sc-db-progress:is(a,button.sc-db-progress,input.sc-db-progress,textarea.sc-db-progress,summary).sc-db-progress{--db-focus-outline-size:max(2px, 0.08em)}.sc-db-progress:is(a,button.sc-db-progress,input.sc-db-progress,textarea.sc-db-progress,summary).sc-db-progress:focus-visible{outline:var(--db-focus-outline-size) var(--db-focus-outline-style, solid) var(--db-focus-outline-color, currentColor);outline-offset:var(--db-focus-outline-offset, var(--db-focus-outline-size))}.sc-db-progress:where(ul){list-style-type:\\\"•   \\\"}.sc-db-progress:where(ul) li.sc-db-progress::marker{color:#ec0016}body.sc-db-progress,.sc-db-progress-h,div.sc-db-progress,button.sc-db-progress,input.sc-db-progress,select.sc-db-progress,textarea.sc-db-progress{color:#282d37;font-family:\\\"DB Screen Sans\\\", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400;line-height:1.5}.sc-db-progress-h{display:inline-block}a.sc-db-progress{color:inherit}.elm-progress.sc-db-progress progress.sc-db-progress{--progress-value--backgroundColor:#ec0016}.elm-progress.sc-db-progress progress.sc-db-progress{appearance:none;background-color:#fcfdfd;border:none;height:0.25rem;vertical-align:middle}.elm-progress.sc-db-progress progress.sc-db-progress::-webkit-progress-bar{background-color:#fcfdfd}.elm-progress.sc-db-progress progress.sc-db-progress::-webkit-progress-value{background-color:var(--progress-value--backgroundColor)}.elm-progress.sc-db-progress progress.sc-db-progress::-moz-progress-bar{background-color:var(--progress-value--backgroundColor)}.elm-progress.sc-db-progress progress.sc-db-progress::-ms-fill{background-color:var(--progress-value--backgroundColor);border:none}.elm-progress.sc-db-progress progress.sc-db-progress:not([style^=\\\"--progress-conic:\\\"])::-webkit-progress-value{border-radius:12px}.elm-progress.sc-db-progress progress.sc-db-progress:not([style^=\\\"--progress-conic:\\\"])::-moz-progress-bar{border-radius:12px}.elm-progress.sc-db-progress progress.sc-db-progress:not([style^=\\\"--progress-conic:\\\"])::-ms-fill{border-radius:12px}.elm-progress.sc-db-progress progress.sc-db-progress:indeterminate{animation-duration:2.1s;animation-iteration-count:infinite;animation-name:elmProgressMoveIndeterminate;animation-timing-function:linear;animation-timing-function:cubic-bezier(0.65, 0.815, 0.735, 0.395);background-color:#fcfdfd;background-image:linear-gradient(to right, #ec0016 100%, #fcfdfd 100%);background-position:top left;background-repeat:no-repeat;background-size:150% 150%}@media (prefers-reduced-motion: reduce){.elm-progress.sc-db-progress progress.sc-db-progress:indeterminate{animation-duration:15s}}.elm-progress.sc-db-progress progress.sc-db-progress:indeterminate::-webkit-progress-bar{background-color:transparent}.elm-progress.sc-db-progress progress.sc-db-progress:indeterminate::-moz-progress-bar{background-color:transparent}@supports (background: conic-gradient(#000, #fff)){.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress{--fill:calc(var(--progress-conic) * 1%);background:conic-gradient(var(--progress-value--backgroundColor) var(--fill), #fff 0);border:0;border-radius:50%;height:4.6875rem;width:4.6875rem}.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress::-webkit-progress-inner-element,.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress::-webkit-progress-bar,.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress::-webkit-progress-value{display:none}.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress::-moz-progress-bar{background:none}.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress+output.sc-db-progress,.elm-progress.sc-db-progress progress[style^=\\\"--progress-conic:\\\"].sc-db-progress+label.sc-db-progress{align-items:center;background:#fdfdfd;border-radius:50%;display:block;display:flex;height:3.4375rem;justify-content:center;position:absolute;transform:translate(0.625rem, -4.0625rem);width:3.4375rem}}@keyframes elmProgressMoveIndeterminate{0%{background-position:-35% 0;background-size:35% 100%}60%{background-position:101% 0;background-size:65% 100%}100%{background-position:101% 0;background-size:1% 100%}}\";\n\nconst DbProgress = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.value = undefined;\n    this.max = undefined;\n    this.htmlid = 'progress-' + uuid();\n    this.percentagesign = '%';\n    this.circle = undefined;\n    this.indeterminate = false;\n  }\n  render() {\n    return (h(\"div\", { class: \"elm-progress\" }, h(\"progress\", Object.assign({ value: this.value, max: this.max, id: this.htmlid }, { indeterminate: this.indeterminate }, { style: this.circle === true\n        ? { ['--progress-conic']: `${this.value}` }\n        : { ['']: '' }, \"aria-describedby\": this.htmlid + '-label' })), !this.indeterminate && (h(\"label\", { htmlFor: this.htmlid, id: this.htmlid + '-label', \"aria-hidden\": \"true\" }, this.value, this.percentagesign))));\n  }\n};\nDbProgress.style = dbProgressCss;\n\nexport { DbProgress as db_progress };\n","const uuid = () => {\n  var _a;\n  return ((_a = window.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID()) || Math.random().toString();\n};\nconst getDefaultLinkData = (compData) => {\n  if (!compData)\n    return '';\n  return compData\n    .map((data) => `<li><db-link href=\"${data.href}\" target=\"${data.target}\">${data.label}</db-link></li>`)\n    .join('\\n');\n};\n/**\n * Adds the given variant as attribute for all db-links\n * @param host the stencil host element\n * @param variant icon variant\n */\nconst addIconVariantToAllDbLinksRecursive = (host, variant) => {\n  if (host.children) {\n    Array.from(host.children).forEach((child) => {\n      if (child.tagName.toLowerCase() === 'db-link') {\n        child.setAttribute('icon-variant', variant);\n      }\n      if (child.children) {\n        addIconVariantToAllDbLinksRecursive(child, variant);\n      }\n    });\n  }\n};\n/**\n * Without framework (Angular, React, Vue) we will need to pass a data as\n * string.\n */\nconst parseData = (item) => {\n  try {\n    if (typeof item === 'string') {\n      return JSON.parse(item);\n    }\n    if (typeof item === 'object')\n      return item;\n    if (item instanceof Array)\n      return item;\n  }\n  catch (error) {\n    return false;\n  }\n};\n\nexport { addIconVariantToAllDbLinksRecursive as a, getDefaultLinkData as g, parseData as p, uuid as u };\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","DbProgress","hostRef","registerInstance","this","undefined","max","htmlid","uuid","percentagesign","circle","indeterminate","h","class","assign","id","style","htmlFor","_a","window","crypto","randomUUID","Math","random","toString","getDefaultLinkData","compData","map","data","href","target","label","join","addIconVariantToAllDbLinksRecursive","host","variant","children","Array","from","forEach","child","tagName","toLowerCase","setAttribute","parseData","item","JSON","parse","error"],"sourceRoot":""}