{"version":3,"file":"static/js/304.eab1bf98.chunk.js","mappings":"gPAKMA,EAAU,WACd,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAWC,EAAAA,EAAAA,GAAYF,KAAM,WAAY,GAC9CA,KAAKG,eAAYC,EACjBJ,KAAKK,aAAUD,EACfJ,KAAKM,cAAWF,EAChBJ,KAAKO,SAAW,aAAcC,EAAAA,EAAAA,KAC9BR,KAAKS,WAAQL,EACbJ,KAAKU,UAAON,EACZJ,KAAKW,cAAWP,EAChBJ,KAAKY,WAAQR,EACbJ,KAAKa,mBAAgBT,CACvB,CAYC,OAXD,iFAGA,WAAuBU,GAAI,sEACzBd,KAAKe,cAAcF,cAAgBC,EAAK,gDACzC,mDALD,IAKC,0BACD,SAAaE,GACXhB,KAAKC,SAASgB,KAAKD,EACrB,GAAC,oBACD,WAAS,WACP,OAAQE,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,QAAS,CAAEE,KAAM,WAAYC,MAAO,eAAgBC,GAAItB,KAAKO,SAAUJ,UAAWH,KAAKG,UAAWE,QAASL,KAAKK,QAASC,SAAUN,KAAKM,SAAUI,KAAMV,KAAKU,KAAMC,SAAUX,KAAKW,SAAUC,MAAOZ,KAAKY,MAAOC,cAAeb,KAAKa,cAAeU,IAAK,SAACC,GAAE,OAAM,EAAKT,cAAgBS,CAAE,EAAGC,SAAU,SAACT,GAAK,OAAK,EAAKU,aAAaV,EAAM,KAAKE,EAAAA,EAAAA,GAAE,QAAS,CAAEG,MAAO,YAAaM,QAAS3B,KAAKO,UAAYP,KAAKS,OACta,KAAC,EAzBa,GA2BhBZ,EAAW+B,MA7BW,2zL,4HCHtB,IAAMpB,EAAO,WACX,IAAIqB,EACJ,OAAiC,QAAxBA,EAAKC,OAAOC,cAA2B,IAAPF,OAAgB,EAASA,EAAGG,eAAiBC,KAAKC,SAASC,UACtG,EACMC,EAAqB,SAACC,GAC1B,OAAKA,EAEEA,EACJC,KAAI,SAACC,GAAI,mCAA2BA,EAAKC,KAAI,qBAAaD,EAAKE,OAAM,aAAKF,EAAK9B,MAAK,sBACpFiC,KAAK,MAHC,EAIX,EAMMC,EAAsC,SAAtCA,EAAuCC,EAAMC,GAC7CD,EAAKE,UACPC,MAAMC,KAAKJ,EAAKE,UAAUG,SAAQ,SAACC,GACG,YAAhCA,EAAMC,QAAQC,eAChBF,EAAMG,aAAa,eAAgBR,GAEjCK,EAAMJ,UACRH,EAAoCO,EAAOL,EAE/C,GAEJ,EAKMS,EAAY,SAACC,GACjB,IACE,GAAoB,kBAATA,EACT,OAAOC,KAAKC,MAAMF,GAEpB,GAAoB,kBAATA,EACT,OAAOA,EACT,GAAIA,aAAgBR,MAClB,OAAOQ,CAIX,CAFA,MAAOG,GACL,OAAO,CACT,CACF,C","sources":["../../../packages/db-ui-elements-stencil/dist/esm/db-checkbox.entry.js","../../../packages/db-ui-elements-stencil/dist/esm/utils-a63157eb.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-545aea95.js';\nimport { u as uuid } from './utils-a63157eb.js';\n\nconst dbCheckboxCss = \"@charset \\\"UTF-8\\\";.sc-db-checkbox:where(html){line-height:1.15}.sc-db-checkbox:where(h1){font-size:2em;margin-block-end:0.67em;margin-block-start:0.67em}.sc-db-checkbox:where(dl,ol.sc-db-checkbox,ul).sc-db-checkbox .sc-db-checkbox:where(dl,ol.sc-db-checkbox,ul).sc-db-checkbox{margin-block-end:0;margin-block-start:0}.sc-db-checkbox:where(hr){box-sizing:content-box;color:inherit;height:0}.sc-db-checkbox:where(pre){font-family:monospace, monospace;font-size:1em}.sc-db-checkbox:where(abbr[title]){text-decoration:underline;text-decoration:underline dotted}.sc-db-checkbox:where(b,strong).sc-db-checkbox{font-weight:bolder}.sc-db-checkbox:where(code,kbd.sc-db-checkbox,samp).sc-db-checkbox{font-family:monospace, monospace;font-size:1em}.sc-db-checkbox:where(small){font-size:80%}.sc-db-checkbox:where(table){border-color:currentColor;text-indent:0}.sc-db-checkbox:where(button,input.sc-db-checkbox,select).sc-db-checkbox{margin:0}.sc-db-checkbox:where(button){text-transform:none}.sc-db-checkbox:where(button,input.sc-db-checkbox:is([type=button i],[type=reset i].sc-db-checkbox,[type=submit i])).sc-db-checkbox{-webkit-appearance:button}.sc-db-checkbox:where(progress){vertical-align:baseline}.sc-db-checkbox:where(select){text-transform:none}.sc-db-checkbox:where(textarea){margin:0}.sc-db-checkbox:where(input[type=search i]){-webkit-appearance:textfield;outline-offset:-2px}.sc-db-checkbox::-webkit-inner-spin-button,.sc-db-checkbox::-webkit-outer-spin-button{height:auto}.sc-db-checkbox::-webkit-input-placeholder{color:inherit;opacity:0.54}.sc-db-checkbox::-webkit-search-decoration{-webkit-appearance:none}.sc-db-checkbox::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.sc-db-checkbox:where(button,input.sc-db-checkbox:is([type=button i],[type=color i].sc-db-checkbox,[type=reset i].sc-db-checkbox,[type=submit i])).sc-db-checkbox::-moz-focus-inner{border-style:none;padding:0}.sc-db-checkbox:where(button,input.sc-db-checkbox:is([type=button i],[type=color i].sc-db-checkbox,[type=reset i].sc-db-checkbox,[type=submit i])).sc-db-checkbox::-moz-focusring{outline:1px dotted ButtonText}.sc-db-checkbox:where(:-moz-ui-invalid){box-shadow:none}.sc-db-checkbox:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:fit-content}.sc-db-checkbox:where(dialog:not([open])){display:none}.sc-db-checkbox:where(summary){display:list-item}html.sc-db-checkbox,.sc-db-checkbox-h{box-sizing:border-box}*.sc-db-checkbox,.sc-db-checkbox::before,.sc-db-checkbox::after{box-sizing:inherit}img.sc-db-checkbox,embed.sc-db-checkbox,iframe.sc-db-checkbox,object.sc-db-checkbox,video.sc-db-checkbox{height:auto;max-width:100%}iframe.sc-db-checkbox{border:0}nav.sc-db-checkbox ol.sc-db-checkbox,nav.sc-db-checkbox ul.sc-db-checkbox,[role=navigation].sc-db-checkbox ol.sc-db-checkbox,[role=navigation].sc-db-checkbox ul.sc-db-checkbox{list-style:none;margin:0;padding:0}.sc-db-checkbox:root{--db-focus-outline-offset:1px;--db-focus-outline-color:#2c95c4}.sc-db-checkbox:is(a,button.sc-db-checkbox,input.sc-db-checkbox,textarea.sc-db-checkbox,summary).sc-db-checkbox{--db-focus-outline-size:max(2px, 0.08em)}.sc-db-checkbox:is(a,button.sc-db-checkbox,input.sc-db-checkbox,textarea.sc-db-checkbox,summary).sc-db-checkbox:focus-visible{outline:var(--db-focus-outline-size) var(--db-focus-outline-style, solid) var(--db-focus-outline-color, currentColor);outline-offset:var(--db-focus-outline-offset, var(--db-focus-outline-size))}.sc-db-checkbox:where(ul){list-style-type:\\\"•   \\\"}.sc-db-checkbox:where(ul) li.sc-db-checkbox::marker{color:#ec0016}body.sc-db-checkbox,.sc-db-checkbox-h,div.sc-db-checkbox,button.sc-db-checkbox,input.sc-db-checkbox,select.sc-db-checkbox,textarea.sc-db-checkbox{color:#282d37;font-family:\\\"DB Screen Sans\\\", Helvetica, Arial, sans-serif;font-size:1rem;font-weight:400;line-height:1.5}.sc-db-checkbox-h{display:inline-block}a.sc-db-checkbox{color:inherit}.elm-checkbox.sc-db-checkbox{align-content:center;appearance:none;background-color:rgba(255, 255, 255, 0.1);border:0.0625rem solid #282d37;border-radius:4px;color:#282d37;display:inline-flex;height:1.5rem;justify-content:center;width:1.5rem}.elm-checkbox.sc-db-checkbox::before{--icon-font-family:\\\"icons-24-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;font-size:var(--icon-font-size-before, var(--icon-font-size, 1.5rem));margin-inline-end:var(--icon-margin-after, 0.375rem);--icon-glyph:\\\" \\\";content:var(--icon-glyph);display:inline-block;font-family:var(--icon-font-family) !important;font-style:normal;font-variant:normal;font-weight:normal;font-weight:var(--icon-font-weight, normal);line-height:1;text-transform:none;vertical-align:middle;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-alt:\\\"\\\";alt:\\\"\\\";speak:none;speak:never}@supports (content: \\\"\\\"/\\\"\\\"){.elm-checkbox.sc-db-checkbox::before{content:var(--icon-glyph)/\\\"\\\"}}@media aural{.elm-checkbox.sc-db-checkbox::before{content:none}}@media speech{.elm-checkbox.sc-db-checkbox::before{content:none}}.elm-checkbox[type=checkbox].sc-db-checkbox{vertical-align:top}.elm-checkbox.sc-db-checkbox::before{--icon-font-size:1.375rem;margin-right:0}.elm-checkbox.sc-db-checkbox:checked{background-color:#282d37}.elm-checkbox.sc-db-checkbox:checked::before{color:#fff;content:\\\"✓\\\"}.elm-checkbox.sc-db-checkbox:not(:disabled):hover{background-color:rgba(40, 45, 55, 0.14)}.elm-checkbox.sc-db-checkbox:not(:disabled):checked:hover{background-color:#52575f}.elm-checkbox.sc-db-checkbox:not(:disabled):active{background-color:rgba(40, 45, 55, 0.14)}.elm-checkbox.sc-db-checkbox:indeterminate::before{content:\\\"−\\\"}.elm-checkbox.sc-db-checkbox:disabled,.elm-checkbox.sc-db-checkbox:disabled+label.sc-db-checkbox{opacity:0.5}.elm-checkbox.sc-db-checkbox+label.sc-db-checkbox{margin-left:0.25rem}[disabled].sc-db-checkbox-h{pointer-events:none}\";\n\nconst DbCheckbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.dbChange = createEvent(this, \"dbChange\", 7);\n    this.autofocus = undefined;\n    this.checked = undefined;\n    this.disabled = undefined;\n    this.input_id = 'checkbox-' + uuid();\n    this.label = undefined;\n    this.name = undefined;\n    this.required = undefined;\n    this.value = undefined;\n    this.indeterminate = undefined;\n  }\n  /**\n   * Method that acceps a boolean and sets the indeterminate state of the checkbox accordingly.\n   */\n  async setIndeterminate(bool) {\n    this.checkboxInput.indeterminate = bool;\n  }\n  handleChange(event) {\n    this.dbChange.emit(event);\n  }\n  render() {\n    return (h(Host, null, h(\"input\", { type: \"checkbox\", class: \"elm-checkbox\", id: this.input_id, autofocus: this.autofocus, checked: this.checked, disabled: this.disabled, name: this.name, required: this.required, value: this.value, indeterminate: this.indeterminate, ref: (el) => (this.checkboxInput = el), onChange: (event) => this.handleChange(event) }), h(\"label\", { class: \"elm-label\", htmlFor: this.input_id }, this.label)));\n  }\n};\nDbCheckbox.style = dbCheckboxCss;\n\nexport { DbCheckbox as db_checkbox };\n","const uuid = () => {\n  var _a;\n  return ((_a = window.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID()) || Math.random().toString();\n};\nconst getDefaultLinkData = (compData) => {\n  if (!compData)\n    return '';\n  return compData\n    .map((data) => `<li><db-link href=\"${data.href}\" target=\"${data.target}\">${data.label}</db-link></li>`)\n    .join('\\n');\n};\n/**\n * Adds the given variant as attribute for all db-links\n * @param host the stencil host element\n * @param variant icon variant\n */\nconst addIconVariantToAllDbLinksRecursive = (host, variant) => {\n  if (host.children) {\n    Array.from(host.children).forEach((child) => {\n      if (child.tagName.toLowerCase() === 'db-link') {\n        child.setAttribute('icon-variant', variant);\n      }\n      if (child.children) {\n        addIconVariantToAllDbLinksRecursive(child, variant);\n      }\n    });\n  }\n};\n/**\n * Without framework (Angular, React, Vue) we will need to pass a data as\n * string.\n */\nconst parseData = (item) => {\n  try {\n    if (typeof item === 'string') {\n      return JSON.parse(item);\n    }\n    if (typeof item === 'object')\n      return item;\n    if (item instanceof Array)\n      return item;\n  }\n  catch (error) {\n    return false;\n  }\n};\n\nexport { addIconVariantToAllDbLinksRecursive as a, getDefaultLinkData as g, parseData as p, uuid as u };\n"],"names":["DbCheckbox","hostRef","registerInstance","this","dbChange","createEvent","autofocus","undefined","checked","disabled","input_id","uuid","label","name","required","value","indeterminate","bool","checkboxInput","event","emit","h","Host","type","class","id","ref","el","onChange","handleChange","htmlFor","style","_a","window","crypto","randomUUID","Math","random","toString","getDefaultLinkData","compData","map","data","href","target","join","addIconVariantToAllDbLinksRecursive","host","variant","children","Array","from","forEach","child","tagName","toLowerCase","setAttribute","parseData","item","JSON","parse","error"],"sourceRoot":""}