{"version":3,"names":["dbPaginationCss","DbPagination","uuid","handleChange","event","this","dbChange","emit","watchHandler","sliceAndSetDefaults","componentWillLoad","pagesFullOverload","Array","from","pages","keys","pagesFull","decorateChild","child","setAttribute","getAttribute","h","innerHTML","outerHTML","paginationButtonFragment","page","curr","ariaCurrent","ariaDisabled","title","rel","tabindex","disabled","index","key","Object","assign","class","type","onClick","navElement","children","role","ariaid","id","arialabel","charAt","toUpperCase","slice","slotChildren","_children","hostElement","firstChild","withoutFirst","lastChild","withoutTips","reverse","tiplessChildren","currentPage","findIndex","prevPage","cloneNode","nextPage","length","Fragment","ellipsisstart","map","ellipsisend","goToPreviousPage","currentpage","titlepagination","goToNextPage","titlenext","goToFirstPage","goToLastPage","showMiddlePage","num","showEllipsis","place","sliceCenterPages","localCount","count","finalSlice","isAtTheEnd","includes","centerPages","render","hasChildren","find","tagName","toLowerCase"],"sources":["src/components/db-pagination/db-pagination.scss?tag=db-pagination","src/components/db-pagination/db-pagination.tsx"],"sourcesContent":["@import 'db-ui-core.general';\n@import 'pagination';\n@import 'link';\n\n:host {\n  @extend html;\n  @extend body;\n}\n\n// TODO: Maybe move the following to DB UI Core, as we might need to enable buttons in general\n.cmp-pagination {\n  button {\n    border: none;\n    font-size: 0.875rem;\n    background-color: inherit;\n    cursor: pointer;\n  }\n\n  .elm-link {\n    &[data-rel='prev'] {\n      @include icon(glyph(chevron-left), $partial: true);\n      @include is-icon-text-replace();\n    }\n\n    &[data-rel='next'] {\n      @include icon(glyph(chevron-right), $partial: true);\n      @include is-icon-text-replace();\n    }\n  }\n}\n\n.elm-link[aria-disabled='true'][aria-current='page'] {\n  opacity: 1;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  Fragment,\n  h,\n  Prop,\n  Watch\n} from '@stencil/core';\nimport { uuid } from '../../utils/utils';\n\n@Component({\n  tag: 'db-pagination',\n  styleUrl: 'db-pagination.scss'\n})\nexport class DbPagination {\n  private pagesFull: number[];\n\n  /**\n   * The ellipsisstart attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the start of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisstart: boolean;\n\n  /**\n   * The ellipsisend attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the end of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisend: boolean;\n\n  /**\n   * The currentpage attribute is a obligatory number attribute and indicates which\n   * page number is highlighted in the pagination.\n   */\n  @Prop({ reflect: true }) currentpage = 1;\n\n  /**\n   * The pages attribute is a obligatory number attribute and indicates how many\n   * pages the pagination knows about.\n   */\n  @Prop({ reflect: true }) pages = 2;\n\n  /**\n   * The count attribute is a number attribute and defines the number of pages\n   * displayed apart from the first and last page (except if currentpage is the\n   * first or last page, then these pages are included in the count).\n   */\n  @Prop({ reflect: true }) count = 2;\n\n  /**\n   * The titleprevious attribute is a string attribute and defines the title of\n   * the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titleprevious = 'Goto previous page';\n\n  /**\n   * The titlenext attribute is a string attribute and defines the title of\n   * the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titlenext = 'Goto next page';\n\n  /**\n   * The titlepagination attribute is a string attribute and defines the title of\n   * each page number (except first and last) displayed in the pagination.\n   */\n  @Prop({ reflect: true }) titlepagination = 'Page Number';\n\n  /**\n   * The textprevious attribute is a string attribute and defines the text\n   * content of the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textprevious = 'Previous';\n\n  /**\n   * The textnext attribute is a string attribute and defines the text\n   * content of the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textnext = 'Next';\n\n  /**\n   * The arialabel attribute is a string attribute and defines the text\n   * content of the aria-label in the pagination.\n   */\n  @Prop({ reflect: true }) arialabel = 'Pagination';\n\n  /**\n   * Optional id for the caption aria label - otherwise random id will be set\n   */\n  @Prop({ reflect: false }) ariaid: string = 'pagination-' + uuid();\n\n  /**\n   * Mapping for default change Event\n   */\n  @Event() dbChange;\n\n  private handleChange(event) {\n    this.dbChange.emit(event);\n  }\n\n  /*\n   * Watch for outside changes on relevant attributes\n   */\n  @Watch('pages')\n  @Watch('currentpage')\n  @Watch('count')\n  watchHandler() {\n    this.sliceAndSetDefaults();\n  }\n\n  @Element() hostElement: HTMLDbPaginationElement;\n  /*\n   * Sets the initial values on components first load\n   */\n  componentWillLoad() {\n    this.sliceAndSetDefaults();\n  }\n\n  private sliceAndSetDefaults() {\n    const pagesFullOverload = Array.from(Array(this.pages + 1).keys());\n    const [, ...pagesFull] = pagesFullOverload;\n    this.pagesFull = pagesFull;\n  }\n\n  private decorateChild(child) {\n    child.setAttribute('class', 'elm-link');\n    if (child.getAttribute('data-currentpage')) {\n      child.setAttribute('aria-current', 'page');\n      child.setAttribute('aria-disabled', 'true');\n    }\n    return <li innerHTML={child.outerHTML} />;\n  }\n\n  private paginationButtonFragment({\n    page,\n    curr,\n    ariaCurrent,\n    ariaDisabled,\n    title,\n    rel,\n    tabindex,\n    disabled,\n    index\n  }) {\n    return (\n      <li key={index}>\n        <button\n          class=\"elm-link\"\n          data-rel={rel === 'none' ? false : `${rel}`}\n          tabindex={tabindex ? '-1' : false}\n          title={title + ` ${page ? page : ''}`}\n          type=\"button\"\n          {...((page === curr || disabled) && ariaCurrent)}\n          {...((page === curr || disabled) && ariaDisabled)}\n          onClick={(event) => this.handleChange(event)}\n        >\n          {page}\n        </button>\n      </li>\n    );\n  }\n\n  private navElement(children) {\n    return (\n      <nav\n        class=\"cmp-pagination\"\n        role=\"navigation\"\n        aria-labelledby={this.ariaid}\n      >\n        <h2 class=\"elm-headline \" id={this.ariaid}>\n          {this.arialabel.charAt(0).toUpperCase() + this.arialabel.slice(1)}\n        </h2>\n        <ol>{children}</ol>\n      </nav>\n    );\n  }\n\n  private slotChildren() {\n    const _children = Array.from(this.hostElement.children);\n\n    // Don't render the children provided via slot\n    this.hostElement.innerHTML = '';\n\n    const [firstChild, ...withoutFirst] = _children;\n    const [lastChild, ...withoutTips] = [...withoutFirst].reverse();\n    const tiplessChildren = withoutTips.reverse();\n\n    const currentPage = tiplessChildren.findIndex((child) =>\n      child.getAttribute('data-currentpage')\n    );\n\n    const prevPage = (\n      currentPage >= 0\n        ? tiplessChildren[currentPage - 1].cloneNode(true)\n        : firstChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n\n    prevPage.setAttribute('rel', 'prev');\n    prevPage.setAttribute('tabindex', '-1');\n\n    const nextPage = (\n      currentPage >= 0 && tiplessChildren.length <= currentPage\n        ? tiplessChildren[currentPage + 1].cloneNode(true)\n        : lastChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n    nextPage.setAttribute('rel', 'next');\n\n    return this.navElement(\n      <Fragment>\n        {this.decorateChild(prevPage)}\n        {this.decorateChild(firstChild)}\n        {this.ellipsisstart && <li>&hellip;</li>}\n        {tiplessChildren.map(this.decorateChild)}\n        {this.ellipsisend && <li>&hellip;</li>}\n        {this.decorateChild(lastChild)}\n        {this.decorateChild(nextPage)}\n      </Fragment>\n    );\n  }\n\n  private goToPreviousPage() {\n    return this.paginationButtonFragment({\n      page: this.currentpage === 1 ? this.currentpage : this.currentpage - 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'prev',\n      tabindex: true,\n      disabled: this.currentpage === 1,\n      index: 'A'\n    });\n  }\n\n  private goToNextPage() {\n    return this.paginationButtonFragment({\n      page:\n        this.currentpage === this.pages + 1\n          ? this.currentpage\n          : this.currentpage + 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlenext,\n      rel: 'next',\n      tabindex: true,\n      disabled: this.currentpage === this.pages ? true : false,\n      index: 'E'\n    });\n  }\n\n  private goToFirstPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull[0],\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: 'B'\n    });\n  }\n\n  private goToLastPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull.slice(-1),\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: this.currentpage === this.pages,\n      index: 'C'\n    });\n  }\n\n  private showMiddlePage(num: number) {\n    return this.paginationButtonFragment({\n      page: num,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: num\n    });\n  }\n\n  private showEllipsis(place: string) {\n    if (this.pagesFull.length < 8) {\n      return null;\n    }\n    if (this.currentpage < 4 && place === 'front') {\n      return null;\n    }\n    if (this.currentpage > this.pagesFull.length - 5 && place === 'back') {\n      return null;\n    }\n    return <li key={place}>&hellip;</li>;\n  }\n\n  private sliceCenterPages() {\n    // Decide how to cut the pages for the middle of the pagination\n    if (this.pagesFull.length < 8) {\n      return this.pagesFull.slice(1, -1);\n    }\n\n    const localCount =\n      this.currentpage <= 3 || this.currentpage >= this.pagesFull.length - 3\n        ? this.count + 1\n        : this.count;\n\n    if (this.currentpage + this.count >= this.pagesFull.length) {\n      return this.pagesFull.slice(-localCount - 1, -1);\n    }\n    if (this.pagesFull.length - 2 <= localCount) {\n      return this.pagesFull.slice(1, 1 + this.pagesFull.length - 2);\n    }\n    if (this.pagesFull.length - 2 > localCount && this.currentpage <= 3) {\n      return this.pagesFull.slice(1, 1 + localCount);\n    }\n    if (\n      this.pagesFull.length - 2 > this.count &&\n      this.currentpage > 3 &&\n      this.currentpage + this.count < this.pagesFull.length\n    ) {\n      const finalSlice = this.pagesFull.slice(\n        this.currentpage - 1,\n        this.currentpage + localCount\n      );\n\n      const isAtTheEnd = finalSlice.includes(this.pagesFull.length - 1);\n      return isAtTheEnd ? finalSlice : finalSlice.slice(0, -1);\n    }\n    return [];\n  }\n\n  private centerPages() {\n    return this.sliceCenterPages().map((num) => this.showMiddlePage(num));\n  }\n\n  render() {\n    const _children = Array.from(this.hostElement.children);\n    const hasChildren = _children.find(\n      (child) => child.tagName.toLowerCase() === 'a'\n    );\n\n    if (hasChildren) {\n      return this.slotChildren();\n    }\n\n    return this.navElement(\n      <Fragment>\n        {this.goToPreviousPage()}\n        {this.goToFirstPage()}\n        {this.showEllipsis('front')}\n        {this.pagesFull.length >= 3 ? this.centerPages() : null}\n        {this.showEllipsis('back')}\n        {this.goToLastPage()}\n        {this.goToNextPage()}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"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"}