{"version":3,"file":"static/js/899.20dc43d9.chunk.js","mappings":"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","sources":["../../../packages/db-ui-elements-stencil/dist/esm/src/components/development/github-version-switcher/github-version-switcher.tsx","../../../packages/db-ui-elements-stencil/dist/esm/src/components/development/github-version-switcher/github-version-switcher.scss?tag=github-version-switcher&encapsulation=shadow"],"sourcesContent":["import { Component, h, Host, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'github-version-switcher',\n  styleUrl: 'github-version-switcher.scss',\n  shadow: true\n})\nexport class GithubVersionSwitcher {\n  private _defaultBranch = 'latest';\n  get defaultBranch(): string {\n    return this._defaultBranch;\n  }\n\n  set defaultBranch(value: string) {\n    this._defaultBranch = value;\n  }\n  /**\n   * Provides the owner of the repo\n   */\n  @Prop({ reflect: false }) owner: string;\n\n  /**\n   * Provides the name of the repo\n   */\n  @Prop({ reflect: false }) repo: string;\n  @State() groups = [\n    { prefix: 'v', name: 'Versions', branches: [] },\n    { prefix: 'test', name: 'Tests', branches: [] },\n    { prefix: 'feat', name: 'Features', branches: [] },\n    { prefix: 'fix', name: 'Bugfixes', branches: [] },\n    { prefix: 'chore', name: 'Chore', branches: [] },\n    { prefix: 'docs', name: 'Docs', branches: [] },\n    { prefix: 'refactor', name: 'Refactors', branches: [] },\n    { prefix: 'style', name: 'Styles', branches: [] },\n    { prefix: 'ci', name: 'CI', branches: [] },\n    { prefix: 'perf', name: 'Perf', branches: [] },\n    { prefix: '', name: 'Other', branches: [] }\n  ];\n  @State() currentBranch = this._defaultBranch;\n  @State() cleanOwner;\n  @State() cleanRepo;\n\n  private stripString = (value: string): string => {\n    return value.replace(/[^a-zA-Z0-9-]/g, '');\n  };\n\n  private fetchFromGitHubApi = async (url: string) => {\n    const response = await fetch(url);\n    return await response.json();\n  };\n\n  private setCurrentBranch = (branchNames: string[]) => {\n    const currentUrl = window.location.href;\n    const foundBranch = branchNames.find((branch) =>\n      currentUrl.includes(branch)\n    );\n    if (foundBranch) {\n      this.currentBranch = foundBranch;\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setBranches = (data: any[]) => {\n    const branchNames = data\n      .map((branch) => branch.name)\n      .filter(\n        (branch) => branch !== 'gh-pages' && !branch.includes('dependabot')\n      );\n    branchNames.forEach((branch) => {\n      const foundGroup = this.groups.find((grp) =>\n        branch.startsWith(grp.prefix)\n      );\n      if (foundGroup) {\n        foundGroup.branches.push(branch);\n      } else {\n        this.groups.at(-1).branches.push(branch);\n      }\n    });\n    this.setCurrentBranch(branchNames);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setTags = (data: any[]) => {\n    const tagNames = data.map((tag) => tag.name);\n    tagNames.forEach((tag: string) => {\n      this.groups[0].branches.push(tag);\n    });\n    this.setCurrentBranch(tagNames);\n  };\n\n  async componentWillLoad() {\n    const cOwner = this.stripString(this.owner);\n    this.cleanOwner = cOwner;\n    const cRepo = this.stripString(this.repo);\n    this.cleanRepo = cRepo;\n    const branchesData = await this.fetchFromGitHubApi(\n      `https://api.github.com/repos/${cOwner}/${cRepo}/branches`\n    );\n    this.setBranches(branchesData);\n    const tagsData = await this.fetchFromGitHubApi(\n      `https://api.github.com/repos/${cOwner}/${cRepo}/tags`\n    );\n    this.setTags(tagsData);\n  }\n\n  // eslint-disable-next-line @stencil-community/own-methods-must-be-private\n  handleChange(branch: string, localOwner: string, localRepo: string) {\n    if (localOwner && localRepo) {\n      const currentUrl = top.location.href;\n      const urlPaths = currentUrl.split('?');\n      const lastPath = urlPaths[urlPaths.length - 1];\n      const isTag = branch.split('.').length === 3 && branch.startsWith('v');\n      top.location = `https://${localOwner}.github.io/${localRepo}${\n        this._defaultBranch === branch\n          ? ''\n          : `${isTag ? '/version' : '/review'}/${branch}`\n      }/?${lastPath}`;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.groups?.length > 0 && (\n          <db-select\n            class=\"gh-version-switcher\"\n            label=\"Version\"\n            name=\"Theme\"\n            onDbChange={(event) =>\n              this.handleChange(\n                event.target.value,\n                this.cleanOwner,\n                this.cleanRepo\n              )\n            }\n          >\n            <option\n              value={this._defaultBranch}\n              selected={this.currentBranch === this._defaultBranch}\n            >\n              {this._defaultBranch}\n            </option>\n            {this.groups\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              .filter((group: any) => group.branches?.length > 0)\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              .map((group: any) => (\n                <optgroup key={group.name} label={group.name}>\n                  {group.branches.map((branch: string, index: number) => (\n                    <option\n                      key={`${group.name}-${branch}-${index}`}\n                      value={branch}\n                      selected={this.currentBranch === branch}\n                    >\n                      {branch}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n          </db-select>\n        )}\n      </Host>\n    );\n  }\n}\n",".gh-version-switcher select {\n  max-width: 196px;\n}\n"],"names":["GithubVersionSwitcher","_defaultBranch","stripString","value","replace","fetchFromGitHubApi","url","_context","fetch","response","json","setCurrentBranch","branchNames","currentUrl","window","location","href","foundBranch","find","branch","includes","_this","currentBranch","setBranches","data","map","name","filter","forEach","foundGroup","groups","grp","startsWith","prefix","branches","push","at","setTags","tagNames","tag","this","set","key","cOwner","owner","cleanOwner","cRepo","repo","cleanRepo","_context2","branchesData","tagsData","localOwner","localRepo","urlPaths","top","split","lastPath","length","isTag","h","Host","class","label","onDbChange","event","_this2","handleChange","target","selected","group","index"],"sourceRoot":""}