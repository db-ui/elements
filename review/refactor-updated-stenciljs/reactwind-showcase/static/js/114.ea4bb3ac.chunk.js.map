{"version":3,"file":"static/js/114.ea4bb3ac.chunk.js","mappings":"4KAAA,MCOaA,EAAe,M,6CAMkC,S,aAKH,U,CAEzDC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,uBAAoBC,KAAKC,SAAQ,eAAgBD,KAAKE,UACpDH,EAAAA,EAAAA,GAAA,a,WDvBmB,0nI","sources":["../../../packages/db-ui-elements-stencil/dist/esm/src/components/db-notification/db-notifications.scss?tag=db-notifications","../../../packages/db-ui-elements-stencil/dist/esm/src/components/db-notification/db-notifications.tsx"],"sourcesContent":["@import 'db-ui-core.general';\n@import 'notification';\n\n:host {\n  @extend body;\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'db-notifications',\n  styleUrl: 'db-notifications.scss',\n  scoped: false\n})\nexport class DbNotifications {\n  /**\n   * The arialive attribute will interrupt the screenreader immediately and read\n   * out the notification if set to \"assertive\", while it will wait for the\n   * user's idleness when set to \"polite\"\n   */\n  @Prop({ reflect: true }) arialive: 'assertive' | 'polite' = 'polite';\n\n  /**\n   * Notifications have two variants (\"hovering\" and \"alert\") which change the styling.\n   */\n  @Prop({ reflect: true }) variant: 'alert' | 'hovering' = 'hovering';\n\n  render() {\n    return (\n      <section aria-live={this.arialive} data-variant={this.variant}>\n        <slot></slot>\n      </section>\n    );\n  }\n}\n"],"names":["DbNotifications","render","h","this","arialive","variant"],"sourceRoot":""}