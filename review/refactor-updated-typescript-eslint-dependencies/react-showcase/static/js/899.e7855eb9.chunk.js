"use strict";(self.webpackChunkreact_showcase=self.webpackChunkreact_showcase||[]).push([[899],{6899:(e,t,s)=>{s.r(t),s.d(t,{github_version_switcher:()=>n});var a=s(7928);const n=class{constructor(e){(0,a.r)(this,e),this._defaultBranch="latest",this.stripString=e=>e.replace(/[^a-zA-Z0-9-]/g,""),this.fetchFromGitHubApi=async e=>{const t=await fetch(e);return await t.json()},this.setCurrentBranch=e=>{const t=window.location.href,s=e.find((e=>t.includes(e)));s&&(this.currentBranch=s)},this.setBranches=e=>{const t=e.map((e=>e.name)).filter((e=>"gh-pages"!==e&&!e.includes("dependabot")));t.forEach((e=>{const t=this.groups.find((t=>e.startsWith(t.prefix)));t?t.branches.push(e):this.groups.at(-1).branches.push(e)})),this.setCurrentBranch(t)},this.setTags=e=>{const t=e.map((e=>e.name));t.forEach((e=>{this.groups[0].branches.push(e)})),this.setCurrentBranch(t)},this.owner=void 0,this.repo=void 0,this.groups=[{prefix:"v",name:"Versions",branches:[]},{prefix:"test",name:"Tests",branches:[]},{prefix:"feat",name:"Features",branches:[]},{prefix:"fix",name:"Bugfixes",branches:[]},{prefix:"chore",name:"Chore",branches:[]},{prefix:"docs",name:"Docs",branches:[]},{prefix:"refactor",name:"Refactors",branches:[]},{prefix:"style",name:"Styles",branches:[]},{prefix:"ci",name:"CI",branches:[]},{prefix:"perf",name:"Perf",branches:[]},{prefix:"",name:"Other",branches:[]}],this.currentBranch=this._defaultBranch,this.cleanOwner=void 0,this.cleanRepo=void 0}get defaultBranch(){return this._defaultBranch}set defaultBranch(e){this._defaultBranch=e}async componentWillLoad(){const e=this.stripString(this.owner);this.cleanOwner=e;const t=this.stripString(this.repo);this.cleanRepo=t;const s=await this.fetchFromGitHubApi("https://api.github.com/repos/".concat(e,"/").concat(t,"/branches"));this.setBranches(s);const a=await this.fetchFromGitHubApi("https://api.github.com/repos/".concat(e,"/").concat(t,"/tags"));this.setTags(a)}handleChange(e,t,s){if(t&&s){const a=top.location.href.split("?"),n=a[a.length-1],r=3===e.split(".").length&&e.startsWith("v");top.location="https://".concat(t,".github.io/").concat(s).concat(this._defaultBranch===e?"":"".concat(r?"/version":"/review","/").concat(e),"/?").concat(n)}}render(){var e;return(0,a.h)(a.H,{key:"ecd05b05d93ab5bbffd0c281b1bc42e7e1999f2a"},(null===(e=this.groups)||void 0===e?void 0:e.length)>0&&(0,a.h)("db-select",{class:"gh-version-switcher",label:"Version",name:"Theme",onDbChange:e=>this.handleChange(e.target.value,this.cleanOwner,this.cleanRepo)},(0,a.h)("option",{value:this._defaultBranch,selected:this.currentBranch===this._defaultBranch},this._defaultBranch),this.groups.filter((e=>{var t;return(null===(t=e.branches)||void 0===t?void 0:t.length)>0})).map((e=>(0,a.h)("optgroup",{key:e.name,label:e.name},e.branches.map(((t,s)=>(0,a.h)("option",{key:"".concat(e.name,"-").concat(t,"-").concat(s),value:t,selected:this.currentBranch===t},t))))))))}};n.style=".gh-version-switcher select{max-width:196px}"}}]);
//# sourceMappingURL=899.e7855eb9.chunk.js.map