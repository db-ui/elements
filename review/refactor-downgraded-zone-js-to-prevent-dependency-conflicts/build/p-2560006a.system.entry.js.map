{"version":3,"names":["dbPaginationCss","DbPaginationStyle0","DbPagination","exports","uuid","class_1","prototype","handleChange","event","this","dbChange","emit","watchHandler","sliceAndSetDefaults","componentWillLoad","pagesFullOverload","Array","from","pages","keys","pagesFull","slice","decorateChild","child","setAttribute","getAttribute","h","innerHTML","outerHTML","paginationButtonFragment","_a","_this","page","curr","ariaCurrent","ariaDisabled","title","rel","tabindex","disabled","index","key","Object","assign","class","concat","type","onClick","navElement","children","role","ariaid","id","arialabel","charAt","toUpperCase","slotChildren","_children","hostElement","firstChild","withoutFirst","__spreadArray","reverse","lastChild","withoutTips","tiplessChildren","currentPage","findIndex","prevPage","cloneNode","nextPage","length","Fragment","ellipsisstart","map","ellipsisend","goToPreviousPage","currentpage","titlepagination","goToNextPage","titlenext","goToFirstPage","goToLastPage","showMiddlePage","num","showEllipsis","place","sliceCenterPages","localCount","count","finalSlice","isAtTheEnd","includes","centerPages","render","hasChildren","find","tagName","toLowerCase"],"sources":["src/components/db-pagination/db-pagination.scss?tag=db-pagination","src/components/db-pagination/db-pagination.tsx"],"sourcesContent":["@import 'db-ui-core.general';\n@import 'pagination';\n@import 'link';\n\n:host {\n  @extend html;\n  @extend body;\n}\n\n// TODO: Maybe move the following to DB UI Core, as we might need to enable buttons in general\n.cmp-pagination {\n  button {\n    border: none;\n    font-size: 0.875rem;\n    background-color: inherit;\n    cursor: pointer;\n  }\n\n  .elm-link {\n    &[data-rel='prev'] {\n      @include icon(glyph(chevron-left), $partial: true);\n      @include is-icon-text-replace();\n    }\n\n    &[data-rel='next'] {\n      @include icon(glyph(chevron-right), $partial: true);\n      @include is-icon-text-replace();\n    }\n  }\n}\n\n.elm-link[aria-disabled='true'][aria-current='page'] {\n  opacity: 1;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  Fragment,\n  h,\n  Prop,\n  Watch\n} from '@stencil/core';\nimport { uuid } from '../../utils/utils';\n\n@Component({\n  tag: 'db-pagination',\n  styleUrl: 'db-pagination.scss'\n})\nexport class DbPagination {\n  private pagesFull: number[];\n\n  /**\n   * The ellipsisstart attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the start of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisstart: boolean;\n\n  /**\n   * The ellipsisend attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the end of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisend: boolean;\n\n  /**\n   * The currentpage attribute is a obligatory number attribute and indicates which\n   * page number is highlighted in the pagination.\n   */\n  @Prop({ reflect: true }) currentpage = 1;\n\n  /**\n   * The pages attribute is a obligatory number attribute and indicates how many\n   * pages the pagination knows about.\n   */\n  @Prop({ reflect: true }) pages = 2;\n\n  /**\n   * The count attribute is a number attribute and defines the number of pages\n   * displayed apart from the first and last page (except if currentpage is the\n   * first or last page, then these pages are included in the count).\n   */\n  @Prop({ reflect: true }) count = 2;\n\n  /**\n   * The titleprevious attribute is a string attribute and defines the title of\n   * the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titleprevious = 'Goto previous page';\n\n  /**\n   * The titlenext attribute is a string attribute and defines the title of\n   * the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titlenext = 'Goto next page';\n\n  /**\n   * The titlepagination attribute is a string attribute and defines the title of\n   * each page number (except first and last) displayed in the pagination.\n   */\n  @Prop({ reflect: true }) titlepagination = 'Page Number';\n\n  /**\n   * The textprevious attribute is a string attribute and defines the text\n   * content of the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textprevious = 'Previous';\n\n  /**\n   * The textnext attribute is a string attribute and defines the text\n   * content of the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textnext = 'Next';\n\n  /**\n   * The arialabel attribute is a string attribute and defines the text\n   * content of the aria-label in the pagination.\n   */\n  @Prop({ reflect: true }) arialabel = 'Pagination';\n\n  /**\n   * Optional id for the caption aria label - otherwise random id will be set\n   */\n  @Prop({ reflect: false }) ariaid: string = 'pagination-' + uuid();\n\n  /**\n   * Mapping for default change Event\n   */\n  @Event() dbChange;\n\n  private handleChange(event) {\n    this.dbChange.emit(event);\n  }\n\n  /*\n   * Watch for outside changes on relevant attributes\n   */\n  @Watch('pages')\n  @Watch('currentpage')\n  @Watch('count')\n  watchHandler() {\n    this.sliceAndSetDefaults();\n  }\n\n  @Element() hostElement: HTMLDbPaginationElement;\n  /*\n   * Sets the initial values on components first load\n   */\n  componentWillLoad() {\n    this.sliceAndSetDefaults();\n  }\n\n  private sliceAndSetDefaults() {\n    const pagesFullOverload = Array.from(Array(this.pages + 1).keys());\n    const [, ...pagesFull] = pagesFullOverload;\n    this.pagesFull = pagesFull;\n  }\n\n  private decorateChild(child) {\n    child.setAttribute('class', 'elm-link');\n    if (child.getAttribute('data-currentpage')) {\n      child.setAttribute('aria-current', 'page');\n      child.setAttribute('aria-disabled', 'true');\n    }\n    return <li innerHTML={child.outerHTML} />;\n  }\n\n  private paginationButtonFragment({\n    page,\n    curr,\n    ariaCurrent,\n    ariaDisabled,\n    title,\n    rel,\n    tabindex,\n    disabled,\n    index\n  }) {\n    return (\n      <li key={index}>\n        <button\n          class=\"elm-link\"\n          data-rel={rel === 'none' ? false : `${rel}`}\n          tabindex={tabindex ? '-1' : false}\n          title={title + ` ${page ? page : ''}`}\n          type=\"button\"\n          {...((page === curr || disabled) && ariaCurrent)}\n          {...((page === curr || disabled) && ariaDisabled)}\n          onClick={(event) => this.handleChange(event)}\n        >\n          {page}\n        </button>\n      </li>\n    );\n  }\n\n  private navElement(children) {\n    return (\n      <nav\n        class=\"cmp-pagination\"\n        role=\"navigation\"\n        aria-labelledby={this.ariaid}\n      >\n        <h2 class=\"elm-headline \" id={this.ariaid}>\n          {this.arialabel.charAt(0).toUpperCase() + this.arialabel.slice(1)}\n        </h2>\n        <ol>{children}</ol>\n      </nav>\n    );\n  }\n\n  private slotChildren() {\n    const _children = Array.from(this.hostElement.children);\n\n    // Don't render the children provided via slot\n    this.hostElement.innerHTML = '';\n\n    const [firstChild, ...withoutFirst] = _children;\n    const [lastChild, ...withoutTips] = [...withoutFirst].reverse();\n    const tiplessChildren = withoutTips.reverse();\n\n    const currentPage = tiplessChildren.findIndex((child) =>\n      child.getAttribute('data-currentpage')\n    );\n\n    const prevPage = (\n      currentPage >= 0\n        ? tiplessChildren[currentPage - 1].cloneNode(true)\n        : firstChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n\n    prevPage.setAttribute('rel', 'prev');\n    prevPage.setAttribute('tabindex', '-1');\n\n    const nextPage = (\n      currentPage >= 0 && tiplessChildren.length <= currentPage\n        ? tiplessChildren[currentPage + 1].cloneNode(true)\n        : lastChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n    nextPage.setAttribute('rel', 'next');\n\n    return this.navElement(\n      <Fragment>\n        {this.decorateChild(prevPage)}\n        {this.decorateChild(firstChild)}\n        {this.ellipsisstart && <li>&hellip;</li>}\n        {tiplessChildren.map(this.decorateChild)}\n        {this.ellipsisend && <li>&hellip;</li>}\n        {this.decorateChild(lastChild)}\n        {this.decorateChild(nextPage)}\n      </Fragment>\n    );\n  }\n\n  private goToPreviousPage() {\n    return this.paginationButtonFragment({\n      page: this.currentpage === 1 ? this.currentpage : this.currentpage - 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'prev',\n      tabindex: true,\n      disabled: this.currentpage === 1,\n      index: 'A'\n    });\n  }\n\n  private goToNextPage() {\n    return this.paginationButtonFragment({\n      page:\n        this.currentpage === this.pages + 1\n          ? this.currentpage\n          : this.currentpage + 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlenext,\n      rel: 'next',\n      tabindex: true,\n      disabled: this.currentpage === this.pages ? true : false,\n      index: 'E'\n    });\n  }\n\n  private goToFirstPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull[0],\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: 'B'\n    });\n  }\n\n  private goToLastPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull.slice(-1),\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: this.currentpage === this.pages,\n      index: 'C'\n    });\n  }\n\n  private showMiddlePage(num: number) {\n    return this.paginationButtonFragment({\n      page: num,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: num\n    });\n  }\n\n  private showEllipsis(place: string) {\n    if (this.pagesFull.length < 8) {\n      return null;\n    }\n    if (this.currentpage < 4 && place === 'front') {\n      return null;\n    }\n    if (this.currentpage > this.pagesFull.length - 5 && place === 'back') {\n      return null;\n    }\n    return <li key={place}>&hellip;</li>;\n  }\n\n  private sliceCenterPages() {\n    // Decide how to cut the pages for the middle of the pagination\n    if (this.pagesFull.length < 8) {\n      return this.pagesFull.slice(1, -1);\n    }\n\n    const localCount =\n      this.currentpage <= 3 || this.currentpage >= this.pagesFull.length - 3\n        ? this.count + 1\n        : this.count;\n\n    if (this.currentpage + this.count >= this.pagesFull.length) {\n      return this.pagesFull.slice(-localCount - 1, -1);\n    }\n    if (this.pagesFull.length - 2 <= localCount) {\n      return this.pagesFull.slice(1, 1 + this.pagesFull.length - 2);\n    }\n    if (this.pagesFull.length - 2 > localCount && this.currentpage <= 3) {\n      return this.pagesFull.slice(1, 1 + localCount);\n    }\n    if (\n      this.pagesFull.length - 2 > this.count &&\n      this.currentpage > 3 &&\n      this.currentpage + this.count < this.pagesFull.length\n    ) {\n      const finalSlice = this.pagesFull.slice(\n        this.currentpage - 1,\n        this.currentpage + localCount\n      );\n\n      const isAtTheEnd = finalSlice.includes(this.pagesFull.length - 1);\n      return isAtTheEnd ? finalSlice : finalSlice.slice(0, -1);\n    }\n    return [];\n  }\n\n  private centerPages() {\n    return this.sliceCenterPages().map((num) => this.showMiddlePage(num));\n  }\n\n  render() {\n    const _children = Array.from(this.hostElement.children);\n    const hasChildren = _children.find(\n      (child) => child.tagName.toLowerCase() === 'a'\n    );\n\n    if (hasChildren) {\n      return this.slotChildren();\n    }\n\n    return this.navElement(\n      <Fragment>\n        {this.goToPreviousPage()}\n        {this.goToFirstPage()}\n        {this.showEllipsis('front')}\n        {this.pagesFull.length >= 3 ? this.centerPages() : null}\n        {this.showEllipsis('back')}\n        {this.goToLastPage()}\n        {this.goToNextPage()}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}