{"version":3,"names":["patchBrowser","importMeta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","alt","header","content","image","illustration","uiCoreIllustrationPath","variant","datatype","disabled","icon","iconafter","input_id","name","selected","current","hreflang","iconVariant","icononly","media","rel","target","type","text","tabledata","align","verticalalign","bodyalign","bodyverticalalign","border","density","fontsize","stripes","sticky","small","owner","repo","groups","currentBranch","cleanOwner","cleanRepo","emphasis","size","summary","open","siteNameLink","anchorRef","anchorTitle","anchorRelation","src","data","arialabel","autofocus","checked","label","required","value","indeterminate","setIndeterminate","opposite","copyright","modernformat","srcset","width","height","loading","caption","responsivemediaquery","ariaid","ariainvalid","ariarequired","autocomplete","autoFocus","description","dirname","list","maxlength","minlength","pattern","step","min","max","placeholder","readonly","ariaSelectedIndex","siteName","arialive","ellipsisstart","ellipsisend","currentpage","pages","count","titleprevious","titlenext","titlepagination","textprevious","textnext","htmlid","percentagesign","circle","active","cols","rows","wrap","valueSize","pulse","multiple","ariaexpanded","ariapressed","formaction","formenctype","formmethod","formnovalidate","formtarget","tooltip"],"sources":["../../node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v3.4.2 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        // TODO(STENCIL-659): Remove code implementing the CSS variable shim\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = \n    // TODO(STENCIL-661): Remove code related to the dynamic import shim\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? (scriptElm || {})['data-opts'] || {} : {};\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        // TODO(STENCIL-663): Remove code related to deprecated `safari10` field.\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        // TODO(STENCIL-661): Remove code related to the dynamic import shim\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\n// TODO(STENCIL-661): Remove code related to the dynamic import shim\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            var _a;\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                // Apply CSP nonce to the script tag if it exists\n                const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                if (nonce != null) {\n                    script.setAttribute('nonce', nonce);\n                }\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"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"}