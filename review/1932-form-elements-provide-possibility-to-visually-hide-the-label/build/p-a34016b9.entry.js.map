{"version":3,"names":["dbMainnavigationCss","getJsxLinks","items","map","item","index","h","key","innerHTML","html","children","setupItemsRecursive","forEach","child","singleAnchor","length","push","outerHTML","Array","from","cleanUpItem","replace","setupOnlyDbLinkNavigation","nonDbLinkChildren","filter","tagName","toLowerCase","getCompDataHtml","compData","data","listTag","hasChildren","link","current","label","addAreaPopupsRecursive","subChildren","find","sChild","setAttribute","DbMainnavigation","componentWillLoad","this","parseData","host","onlyLinks","hasItemsWrapper","render","class","id","type","htmlFor","title","siteName"],"sources":["src/components/db-mainnavigation/db-mainnavigation.scss?tag=db-mainnavigation","src/components/db-mainnavigation/db-mainnavigation.tsx"],"sourcesContent":["@import '../general';\n@import 'mainnavigation';\n\na {\n  @extend .elm-link;\n}\n","import { Component, Element, h, Prop } from '@stencil/core';\nimport {\n  DbMainnavigationDataType,\n  DbMainnavigationItemType\n} from './db-mainnavigation-type';\nimport { parseData } from '../../utils/utils';\n\nconst getJsxLinks = (items: DbMainnavigationItemType[]) => {\n  return items.map((item, index) => (\n    <li key={`mainnavigation-item-${index}`} innerHTML={item.html}>\n      {item.children && <ul>{getJsxLinks(item.children)}</ul>}\n    </li>\n  ));\n};\n\nconst setupItemsRecursive = (\n  children: Element[]\n): DbMainnavigationItemType[] => {\n  const items: DbMainnavigationItemType[] = [];\n  children.forEach((child) => {\n    const singleAnchor = child.children.length === 1;\n\n    items.push({\n      html: child.outerHTML,\n      children:\n        !singleAnchor && child.children\n          ? setupItemsRecursive(Array.from(child.children))\n          : []\n    });\n  });\n  return items;\n};\nconst cleanUpItem = (item: DbMainnavigationItemType) => {\n  item.children.forEach((child) => {\n    item.html = item.html.replace(child.html, '');\n    cleanUpItem(child);\n  });\n};\n\nconst setupOnlyDbLinkNavigation = (\n  children: Element[]\n): DbMainnavigationItemType[] => {\n  const nonDbLinkChildren = children.filter(\n    (child) =>\n      child.tagName.toLowerCase() !== 'db-link' &&\n      child.tagName.toLowerCase() !== 'a'\n  );\n  if (nonDbLinkChildren.length === 0) {\n    const items = setupItemsRecursive(children);\n    items.forEach((item) => {\n      cleanUpItem(item);\n    });\n    return items;\n  }\n  return [];\n};\n\nconst getCompDataHtml = (compData: DbMainnavigationDataType[]) => {\n  let html = '';\n\n  compData.forEach((data) => {\n    let listTag = '<li>\\n';\n    let hasChildren = false;\n    if (data.children && data.children.length > 0) {\n      listTag = '<li aria-haspopup=\"true\">\\n';\n      hasChildren = true;\n    }\n\n    listTag += `<db-link href=\"${data.link}\" current=\"${\n      data.current ? 'page' : false\n    }\">${data.label}</db-link>\\n`;\n    html += listTag;\n    if (hasChildren) {\n      html += `<ul>\\n${getCompDataHtml(data.children)}</ul>\\n`;\n    }\n    html += '</li>';\n  });\n  return html;\n};\n\nconst addAreaPopupsRecursive = (children: Element[]) => {\n  if (children && children.length > 0) {\n    children.forEach((child) => {\n      if (child.tagName.toLowerCase() === 'li' && child.children) {\n        const subChildren = Array.from(child.children);\n        if (\n          subChildren.find((sChild) => sChild.tagName.toLowerCase() === 'ul')\n        ) {\n          child.setAttribute('aria-haspopup', 'true');\n        }\n        addAreaPopupsRecursive(subChildren);\n      }\n    });\n  }\n};\n\n@Component({\n  tag: 'db-mainnavigation',\n  styleUrl: 'db-mainnavigation.scss'\n})\nexport class DbMainnavigation {\n  /**\n   * The site-name attribute can be set to have the site name for small screens.\n   */\n  @Prop({ reflect: true, attribute: 'site-name' }) siteName?: string;\n\n  /**\n   * The data attribute can be used to generate main navigation by data.\n   */\n  @Prop({ reflect: true }) data?: string;\n\n  private hasItemsWrapper: boolean;\n\n  private compData: DbMainnavigationDataType[];\n\n  private children: Element[];\n  private onlyLinks: DbMainnavigationItemType[];\n\n  @Element() host: HTMLDbMainnavigationElement;\n\n  componentWillLoad() {\n    if (this.data) {\n      this.compData = parseData(this.data);\n    } else {\n      this.children = Array.from(this.host.children);\n      this.onlyLinks = setupOnlyDbLinkNavigation(this.children);\n      if (this.children.find((child) => child.tagName.toLowerCase() === 'li')) {\n        this.hasItemsWrapper = true;\n        addAreaPopupsRecursive(this.children);\n      } else {\n        this.host.innerHTML = '';\n      }\n    }\n  }\n\n  render() {\n    return (\n      <nav class=\"cmp-mainnavigation\" id=\"mainnavigation\">\n        <input type=\"checkbox\" id=\"toggle_mainnavigation\" />\n        <label\n          htmlFor=\"toggle_mainnavigation\"\n          title=\"Toggle main navigation\"\n          class=\"is-site-name\"\n        >\n          {this.siteName}\n        </label>\n        {this.compData && <ul innerHTML={getCompDataHtml(this.compData)} />}\n        {!this.compData && (\n          <ul>\n            {this.onlyLinks && getJsxLinks(this.onlyLinks)}\n            {!this.hasItemsWrapper &&\n              !this.onlyLinks &&\n              this.children.map((child, index) => (\n                <li\n                  key={`cmp-mainnavigation-item-${index}`}\n                  innerHTML={child.outerHTML}\n                />\n              ))}\n            {this.hasItemsWrapper && <slot />}\n          </ul>\n        )}\n      </nav>\n    );\n  }\n}\n"],"mappings":"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"}