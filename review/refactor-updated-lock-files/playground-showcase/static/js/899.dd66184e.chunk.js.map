{"version":3,"file":"static/js/899.dd66184e.chunk.js","mappings":"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","sources":["../../../packages/db-ui-elements-stencil/dist/esm/github-version-switcher.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-545aea95.js';\n\nconst githubVersionSwitcherCss = \".gh-version-switcher select{max-width:196px}\";\n\nconst GithubVersionSwitcher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._defaultBranch = 'latest';\n    this.stripString = (value) => {\n      return value.replace(/[^a-zA-Z0-9-]/g, '');\n    };\n    this.fetchFromGitHubApi = async (url) => {\n      const response = await fetch(url);\n      return await response.json();\n    };\n    this.setCurrentBranch = (branchNames) => {\n      const currentUrl = window.location.href;\n      const foundBranch = branchNames.find((branch) => currentUrl.includes(branch));\n      if (foundBranch) {\n        this.currentBranch = foundBranch;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.setBranches = (data) => {\n      const branchNames = data\n        .map((branch) => branch.name)\n        .filter((branch) => branch !== 'gh-pages' && !branch.includes('dependabot'));\n      branchNames.forEach((branch) => {\n        const foundGroup = this.groups.find((grp) => branch.startsWith(grp.prefix));\n        if (foundGroup) {\n          foundGroup.branches.push(branch);\n        }\n        else {\n          this.groups.at(-1).branches.push(branch);\n        }\n      });\n      this.setCurrentBranch(branchNames);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.setTags = (data) => {\n      const tagNames = data.map((tag) => tag.name);\n      tagNames.forEach((tag) => {\n        this.groups[0].branches.push(tag);\n      });\n      this.setCurrentBranch(tagNames);\n    };\n    this.owner = undefined;\n    this.repo = undefined;\n    this.groups = [\n      { prefix: 'v', name: 'Versions', branches: [] },\n      { prefix: 'test', name: 'Tests', branches: [] },\n      { prefix: 'feat', name: 'Features', branches: [] },\n      { prefix: 'fix', name: 'Bugfixes', branches: [] },\n      { prefix: 'chore', name: 'Chore', branches: [] },\n      { prefix: 'docs', name: 'Docs', branches: [] },\n      { prefix: 'refactor', name: 'Refactors', branches: [] },\n      { prefix: 'style', name: 'Styles', branches: [] },\n      { prefix: 'ci', name: 'CI', branches: [] },\n      { prefix: 'perf', name: 'Perf', branches: [] },\n      { prefix: '', name: 'Other', branches: [] }\n    ];\n    this.currentBranch = this._defaultBranch;\n    this.cleanOwner = undefined;\n    this.cleanRepo = undefined;\n  }\n  get defaultBranch() {\n    return this._defaultBranch;\n  }\n  set defaultBranch(value) {\n    this._defaultBranch = value;\n  }\n  async componentWillLoad() {\n    const cOwner = this.stripString(this.owner);\n    this.cleanOwner = cOwner;\n    const cRepo = this.stripString(this.repo);\n    this.cleanRepo = cRepo;\n    const branchesData = await this.fetchFromGitHubApi(`https://api.github.com/repos/${cOwner}/${cRepo}/branches`);\n    this.setBranches(branchesData);\n    const tagsData = await this.fetchFromGitHubApi(`https://api.github.com/repos/${cOwner}/${cRepo}/tags`);\n    this.setTags(tagsData);\n  }\n  // eslint-disable-next-line @stencil/own-methods-must-be-private\n  handleChange(branch, localOwner, localRepo) {\n    if (localOwner && localRepo) {\n      const currentUrl = top.location.href;\n      const urlPaths = currentUrl.split('?');\n      const lastPath = urlPaths[urlPaths.length - 1];\n      const isTag = branch.split('.').length === 3 && branch.startsWith('v');\n      top.location = `https://${localOwner}.github.io/${localRepo}${this._defaultBranch === branch\n        ? ''\n        : `${isTag ? '/version' : '/review'}/${branch}`}/?${lastPath}`;\n    }\n  }\n  render() {\n    var _a;\n    return (h(Host, null, ((_a = this.groups) === null || _a === void 0 ? void 0 : _a.length) > 0 && (h(\"db-select\", { class: \"gh-version-switcher\", label: \"Version\", name: \"Theme\", onDbChange: (event) => this.handleChange(event.target.value, this.cleanOwner, this.cleanRepo) }, h(\"option\", { value: this._defaultBranch, selected: this.currentBranch === this._defaultBranch }, this._defaultBranch), this.groups\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .filter((group) => { var _a; return ((_a = group.branches) === null || _a === void 0 ? void 0 : _a.length) > 0; })\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .map((group) => (h(\"optgroup\", { key: group.name, label: group.name }, group.branches.map((branch, index) => (h(\"option\", { key: `${group.name}-${branch}-${index}`, value: branch, selected: this.currentBranch === branch }, branch))))))))));\n  }\n};\nGithubVersionSwitcher.style = githubVersionSwitcherCss;\n\nexport { GithubVersionSwitcher as github_version_switcher };\n"],"names":["GithubVersionSwitcher","hostRef","registerInstance","this","_defaultBranch","stripString","value","replace","fetchFromGitHubApi","url","fetch","response","json","setCurrentBranch","branchNames","currentUrl","window","location","href","foundBranch","find","branch","includes","currentBranch","setBranches","data","map","name","filter","forEach","foundGroup","groups","grp","startsWith","prefix","branches","push","at","setTags","tagNames","tag","owner","undefined","repo","cleanOwner","cleanRepo","cOwner","cRepo","branchesData","tagsData","localOwner","localRepo","urlPaths","top","split","lastPath","length","isTag","_a","h","Host","class","label","onDbChange","event","handleChange","target","selected","group","key","index","style"],"sourceRoot":""}