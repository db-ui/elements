{"version":3,"file":"static/js/737.deca97d9.chunk.js","mappings":"4MAIMA,EAAM,WACV,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAIvBE,KAAKC,YAAc,aANX,gDAQV,WAAoB,WACZC,EAAWC,MAAMC,KAAKJ,KAAKK,KAAKH,UAId,IAApBA,EAASI,QAAsD,MAAtCJ,EAAS,GAAGK,QAAQC,gBAC/CN,EAAS,GAAGO,oBAAoBC,SAAQ,SAACC,GACvC,EAAKA,GAAaT,EAAS,GAAGU,aAAaD,MAE7CX,KAAKa,KAAOX,EAAS,GAAGY,YACxBd,KAAKK,KAAKU,UAAY,MAlBhB,oBAqBV,WACE,OAAQC,EAAAA,EAAAA,GAAE,IAAK,CAAEC,MAAO,YAAcjB,KAAKkB,SAAW,wBAA0B,IAAKC,KAAMnB,KAAKmB,KAAMC,SAAUpB,KAAKoB,SAAU,YAAapB,KAAKqB,KAAMC,MAAOtB,KAAKsB,MAAOC,IAAKvB,KAAKuB,IAAKC,OAAQxB,KAAKwB,OAAQ,eAAgBxB,KAAKyB,SAAWzB,KAAK0B,MAAQV,EAAAA,EAAAA,GAAE,UAAW,CAAEU,KAAM1B,KAAK0B,KAAMC,QAAS3B,KAAKC,cAAkB,KAAMD,KAAKa,MAAQb,KAAKa,MAAOb,KAAKa,OAAQG,EAAAA,EAAAA,GAAE,OAAQ,SAtBzW,gBAwBV,WAAa,OAAOY,EAAAA,EAAAA,GAAW5B,UAxBrB,KA0BZH,EAAOgC,MA5BW","sources":["../../../packages/db-ui-elements-stencil/dist/esm/db-link.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-60c9fafb.js';\n\nconst dbLinkCss = \"@charset \\\"UTF-8\\\";:where(html){line-height:1.15}:where(h1){font-size:2em;margin-block-end:0.67em;margin-block-start:0.67em}:where(dl,ol,ul) :where(dl,ol,ul){margin-block-end:0;margin-block-start:0}:where(hr){box-sizing:content-box;color:inherit;height:0}:where(pre){font-family:monospace, monospace;font-size:1em}:where(abbr[title]){text-decoration:underline;text-decoration:underline dotted}:where(b,strong){font-weight:bolder}:where(code,kbd,samp){font-family:monospace, monospace;font-size:1em}:where(small){font-size:80%}:where(table){border-color:currentColor;text-indent:0}:where(button,input,select){margin:0}:where(button){text-transform:none}:where(button,input:is([type=button i],[type=reset i],[type=submit i])){-webkit-appearance:button}:where(progress){vertical-align:baseline}:where(select){text-transform:none}:where(textarea){margin:0}:where(input[type=search i]){-webkit-appearance:textfield;outline-offset:-2px}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focus-inner{border-style:none;padding:0}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focusring{outline:1px dotted ButtonText}:where(:-moz-ui-invalid){box-shadow:none}:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:fit-content}:where(dialog:not([open])){display:none}:where(summary){display:list-item}html,:host{box-sizing:border-box}*,::before,::after{box-sizing:inherit}img,embed,iframe,object,video{height:auto;max-width:100%}iframe{border:0}nav ol,nav ul,[role=navigation] ol,[role=navigation] ul{list-style:none;margin:0;padding:0}:root{--db-focus-outline-offset:1px;--db-focus-outline-color:#2c95c4}:is(a,button,input,textarea,summary){--db-focus-outline-size:max(2px, 0.08em)}:is(a,button,input,textarea,summary):focus-visible{outline:var(--db-focus-outline-size) var(--db-focus-outline-style, solid) var(--db-focus-outline-color, currentColor);outline-offset:var(--db-focus-outline-offset, var(--db-focus-outline-size))}body,:host,div,button,input,select,textarea{font-family:\\\"DB Screen Sans\\\", Helvetica, Arial, sans-serif;color:#282d37;font-size:1rem;font-weight:400;line-height:1.5}a{color:inherit}.elm-link{display:inline-block;border-radius:0.25rem;text-underline-offset:0.1875rem;text-underline-position:under}@supports (text-underline-offset: 3px){.elm-link{text-underline-position:auto}}.elm-link:active{color:initial}.elm-link[aria-disabled=true]{opacity:0.4;pointer-events:none}.elm-link[aria-disabled=true]::before{color:initial}.elm-link[data-size=small]:not(.is-icon-text-replace){font-size:0.875rem}.elm-link[rel][data-size=small]::before,.elm-link[data-icon][data-size=small]::before,.elm-link[data-icon-before][data-size=small]::before{--icon-font-family:\\\"icons-20-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.25rem}.elm-link[data-icon-after][data-size=small]::after::after{--icon-font-family:\\\"icons-20-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.25rem}.elm-link[rel=configuration]::before{--icon-font-family:\\\"icons-24-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.5rem;margin-inline-end:var(--icon-margin-after, 0.375rem);--icon-glyph:\\\"âš™\\\";font-family:var(--icon-font-family) !important;font-size:var(--icon-font-size);vertical-align:middle;content:var(--icon-glyph);font-style:normal;font-weight:normal;font-weight:var(--icon-font-weight, normal);font-variant:normal;text-transform:none;line-height:1;display:inline-block;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-alt:\\\"\\\";alt:\\\"\\\";speak:none}@supports (content: \\\"\\\"/\\\"\\\"){.elm-link[rel=configuration]::before{content:var(--icon-glyph)/\\\"\\\"}}@media aural{.elm-link[rel=configuration]::before{content:none}}@media speech{.elm-link[rel=configuration]::before{content:none}}.elm-link[rel=messages]::before{--icon-font-family:\\\"icons-24-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.5rem;margin-inline-end:var(--icon-margin-after, 0.375rem);--icon-glyph:\\\"ðŸ’¬\\\";font-family:var(--icon-font-family) !important;font-size:var(--icon-font-size);vertical-align:middle;content:var(--icon-glyph);font-style:normal;font-weight:normal;font-weight:var(--icon-font-weight, normal);font-variant:normal;text-transform:none;line-height:1;display:inline-block;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-alt:\\\"\\\";alt:\\\"\\\";speak:none}@supports (content: \\\"\\\"/\\\"\\\"){.elm-link[rel=messages]::before{content:var(--icon-glyph)/\\\"\\\"}}@media aural{.elm-link[rel=messages]::before{content:none}}@media speech{.elm-link[rel=messages]::before{content:none}}.elm-link[rel=account]::before{--icon-font-family:\\\"icons-24-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.5rem;margin-inline-end:var(--icon-margin-after, 0.375rem);--icon-glyph:\\\"ðŸ™‚\\\";font-family:var(--icon-font-family) !important;font-size:var(--icon-font-size);vertical-align:middle;content:var(--icon-glyph);font-style:normal;font-weight:normal;font-weight:var(--icon-font-weight, normal);font-variant:normal;text-transform:none;line-height:1;display:inline-block;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-alt:\\\"\\\";alt:\\\"\\\";speak:none}@supports (content: \\\"\\\"/\\\"\\\"){.elm-link[rel=account]::before{content:var(--icon-glyph)/\\\"\\\"}}@media aural{.elm-link[rel=account]::before{content:none}}@media speech{.elm-link[rel=account]::before{content:none}}.elm-link[rel=configuration]::before,.elm-link[rel=messages]::before,.elm-link[rel=account]::before{display:inline-block}db-icon{margin-right:0.375rem}\";\n\nconst DbLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The variant attribute specifies the style and size of an icon.\n     */\n    this.iconVariant = '24-outline';\n  }\n  componentWillLoad() {\n    const children = Array.from(this.host.children);\n    // This is a workaround for frameworks like angular.\n    // They use custom attributes like \"routerLink\" on an <a>.\n    // We copy those attributes to the <a> inside <db-link>.\n    if (children.length === 1 && children[0].tagName.toLowerCase() === 'a') {\n      children[0].getAttributeNames().forEach((attribute) => {\n        this[attribute] = children[0].getAttribute(attribute);\n      });\n      this.text = children[0].textContent;\n      this.host.innerHTML = '';\n    }\n  }\n  render() {\n    return (h(\"a\", { class: 'elm-link' + (this.icononly ? ' is-icon-text-replace' : ''), href: this.href, hreflang: this.hreflang, \"data-type\": this.type, media: this.media, rel: this.rel, target: this.target, \"aria-current\": this.current }, this.icon ? (h(\"db-icon\", { icon: this.icon, variant: this.iconVariant })) : null, this.text && this.text, !this.text && h(\"slot\", null)));\n  }\n  get host() { return getElement(this); }\n};\nDbLink.style = dbLinkCss;\n\nexport { DbLink as db_link };\n"],"names":["DbLink","hostRef","registerInstance","this","iconVariant","children","Array","from","host","length","tagName","toLowerCase","getAttributeNames","forEach","attribute","getAttribute","text","textContent","innerHTML","h","class","icononly","href","hreflang","type","media","rel","target","current","icon","variant","getElement","style"],"sourceRoot":""}