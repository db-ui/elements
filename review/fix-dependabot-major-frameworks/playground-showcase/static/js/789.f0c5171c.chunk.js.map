{"version":3,"file":"static/js/789.f0c5171c.chunk.js","mappings":"6MAIMA,EAAM,WACV,WAAYC,IAAS,gBACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAIvBE,KAAKC,SAAW,YAIhBD,KAAKE,UAAW,EAIhBF,KAAKG,SAAW,QAAUC,KAAKC,SAASC,WAIxCN,KAAKO,KAAO,OACb,CAnBS,qCAoBV,WACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,QAAS,CAAEE,MAAO,WAAYC,KAAwB,WAAlBX,KAAKC,SAAwB,WAAa,QAASW,GAAIZ,KAAKG,SAAU,YAAaH,KAAKC,SAAUC,SAAUF,KAAKE,SAAUK,KAAMP,KAAKO,QAASC,EAAAA,EAAAA,GAAE,QAAS,CAAEK,QAASb,KAAKG,SAAUW,KAAM,SAAU,cAAe,OAAQ,eAAgBd,KAAKe,SAAWf,KAAKgB,MAAOR,EAAAA,EAAAA,GAAE,UAAW,CAAEO,QAAS,aAAcC,KAAMhB,KAAKgB,OAAU,MAAMR,EAAAA,EAAAA,GAAE,OAAQ,MAAOR,KAAKiB,WAAaT,EAAAA,EAAAA,GAAE,UAAW,CAAEO,QAAS,aAAcC,KAAMhB,KAAKiB,YAAgB,MACze,KAtBS,KAwBZpB,EAAOqB,MA1BW,q7I","sources":["../../../packages/db-ui-elements-stencil/dist/esm/db-chip.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-60c9fafb.js';\n\nconst dbChipCss = \":where(html){line-height:1.15}:where(h1){font-size:2em;margin-block-end:0.67em;margin-block-start:0.67em}:where(dl,ol,ul) :where(dl,ol,ul){margin-block-end:0;margin-block-start:0}:where(hr){box-sizing:content-box;color:inherit;height:0}:where(pre){font-family:monospace, monospace;font-size:1em}:where(abbr[title]){text-decoration:underline;text-decoration:underline dotted}:where(b,strong){font-weight:bolder}:where(code,kbd,samp){font-family:monospace, monospace;font-size:1em}:where(small){font-size:80%}:where(table){border-color:currentColor;text-indent:0}:where(button,input,select){margin:0}:where(button){text-transform:none}:where(button,input:is([type=button i],[type=reset i],[type=submit i])){-webkit-appearance:button}:where(progress){vertical-align:baseline}:where(select){text-transform:none}:where(textarea){margin:0}:where(input[type=search i]){-webkit-appearance:textfield;outline-offset:-2px}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focus-inner{border-style:none;padding:0}:where(button,input:is([type=button i],[type=color i],[type=reset i],[type=submit i]))::-moz-focusring{outline:1px dotted ButtonText}:where(:-moz-ui-invalid){box-shadow:none}:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:fit-content}:where(dialog:not([open])){display:none}:where(summary){display:list-item}html,:host{box-sizing:border-box}*,::before,::after{box-sizing:inherit}img,embed,iframe,object,video{height:auto;max-width:100%}iframe{border:0}nav ol,nav ul,[role=navigation] ol,[role=navigation] ul{list-style:none;margin:0;padding:0}:root{--db-focus-outline-offset:1px;--db-focus-outline-color:#2c95c4}:is(a,button,input,textarea,summary){--db-focus-outline-size:max(2px, 0.08em)}:is(a,button,input,textarea,summary):focus-visible{outline:var(--db-focus-outline-size) var(--db-focus-outline-style, solid) var(--db-focus-outline-color, currentColor);outline-offset:var(--db-focus-outline-offset, var(--db-focus-outline-size))}body,:host,div,button,input,select,textarea{font-family:\\\"DB Screen Sans\\\", Helvetica, Arial, sans-serif;color:#282d37;font-size:1rem;font-weight:400;line-height:1.5}a{color:inherit}.elm-chip+label{align-items:center;border:solid 1px #878c96;border-radius:0.25rem;display:inline-flex;font-size:0.875rem;height:1.75rem;justify-content:center;padding-left:0.4375rem;padding-right:0.4375rem;white-space:nowrap;text-decoration:none;text-transform:capitalize}.elm-chip+label[data-icon]::before,.elm-chip+label[data-icon-before]::before{--icon-font-family:\\\"icons-20-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.25rem}.elm-chip+label[data-icon-after]::after{--icon-font-family:\\\"icons-20-outline\\\",\\n  \\t\\\"missing-icons\\\" !important;--icon-font-size:1.25rem}.elm-chip:not(:disabled,:checked)+label:hover{background-color:rgba(40, 45, 55, 0.03)}.elm-chip:checked+label{border-color:transparent;background-color:#282d37;color:#ffffff}.elm-chip:checked+label[data-variant=warning]{background-color:#f75f00}.elm-chip:checked+label[data-variant=error]{background-color:#ec0016}.elm-chip:checked+label[data-variant=informative]{background-color:#0087b9}.elm-chip:checked+label[data-variant=success]{background-color:#508b1b}.elm-chip:checked+label[data-variant=poi-essen-trinken]{background-color:#f39200;color:#282d37}.elm-chip:checked+label[data-variant=poi-einkaufen]{background-color:#814997}.elm-chip:checked+label[data-variant=poi-gesundheit]{background-color:#a9455d}.elm-chip:checked+label[data-variant=poi-kunst-kultur]{background-color:#e93e8f}.elm-chip:checked+label[data-variant=poi-wissenswertes]{background-color:#858379}.elm-chip:checked+label[data-variant=poi-freizeit]{background-color:#408335}.elm-chip:checked+label[data-variant=poi-zivile-rel-einrichtungen]{background-color:#00a099}.elm-chip:checked+label[data-variant=poi-dienstleistungen]{background-color:#309fd1;color:#282d37}.elm-chip:checked+label[data-variant=poi-db-services-einrichtung]{background-color:#0c3992}.elm-chip:checked+label[data-variant=poi-wegeleitung]{background-color:#3c414b}.elm-chip:disabled+label{opacity:0.5}.elm-chip[type=checkbox],.elm-chip[type=radio]{display:none}\";\n\nconst DbChip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     *  Decides which datatype you want to use: filter (1-n); selection (1);\n     */\n    this.datatype = 'selection';\n    /**\n     * The disabled attribute can be set to keep a user from clicking on the chip.\n     */\n    this.disabled = false;\n    /**\n     * The input_id of a label form-related element in the same document as the label element. The first element in the document with an id matching the value of the for attribute is the labeled control for this label element, if it is a label element.\n     */\n    this.input_id = 'chip-' + Math.random().toString();\n    /**\n     *  Name to group multiple chips.\n     */\n    this.name = 'chips';\n  }\n  render() {\n    return (h(Host, null, h(\"input\", { class: \"elm-chip\", type: this.datatype === 'filter' ? 'checkbox' : 'radio', id: this.input_id, \"data-type\": this.datatype, disabled: this.disabled, name: this.name }), h(\"label\", { htmlFor: this.input_id, role: \"button\", \"aria-hidden\": \"true\", \"data-variant\": this.variant }, this.icon ? h(\"db-icon\", { variant: \"20-outline\", icon: this.icon }) : null, h(\"slot\", null), this.iconafter ? (h(\"db-icon\", { variant: \"20-outline\", icon: this.iconafter })) : null)));\n  }\n};\nDbChip.style = dbChipCss;\n\nexport { DbChip as db_chip };\n"],"names":["DbChip","hostRef","registerInstance","this","datatype","disabled","input_id","Math","random","toString","name","h","Host","class","type","id","htmlFor","role","variant","icon","iconafter","style"],"sourceRoot":""}