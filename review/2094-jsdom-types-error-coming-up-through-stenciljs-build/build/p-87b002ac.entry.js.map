{"version":3,"names":["dbTabCss","DbTab","constructor","hostRef","this","id","uuid","render","h","Host","class","type","name","checked","active","htmlFor","role","label"],"sources":["src/components/db-tab/db-tab.scss?tag=db-tab","src/components/db-tab/db-tab.tsx"],"sourcesContent":["@import '../general';\n@import 'tab-bar';\n\n.cmp-db-tab {\n  display: contents;\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { uuid } from '../../utils/utils';\n@Component({\n  tag: 'db-tab',\n  styleUrl: 'db-tab.scss'\n})\nexport class DbTab {\n  /**\n   * If the tab is checked/active.\n   */\n  @Prop({ reflect: true }) active: boolean;\n\n  /**\n   * The label of the tab, shown in the tab-bar.\n   */\n  @Prop({ reflect: true }) label: string;\n\n  /**\n   * The name of the tab bar, is required for grouping multiple tabs together. Otherwise content won't switch by clicking the tabs.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  private readonly id: string;\n\n  constructor() {\n    this.id = uuid();\n  }\n\n  render() {\n    return (\n      <Host class=\"cmp-db-tab\">\n        <input\n          type=\"radio\"\n          name={this.name}\n          id={this.id}\n          checked={this.active}\n        />\n        <label htmlFor={this.id} role=\"tab\">\n          {this.label}\n        </label>\n        <section id={`content-${this.id}`} role=\"tabpanel\">\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAW,6yJ,MCMJC,EAAK,MAkBhB,WAAAC,CAAAC,G,yEACEC,KAAKC,GAAKC,G,CAGZ,MAAAC,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,cACVF,EAAA,SACEG,KAAK,QACLC,KAAMR,KAAKQ,KACXP,GAAID,KAAKC,GACTQ,QAAST,KAAKU,SAEhBN,EAAA,SAAOO,QAASX,KAAKC,GAAIW,KAAK,OAC3BZ,KAAKa,OAERT,EAAA,WAASH,GAAI,WAAWD,KAAKC,KAAMW,KAAK,YACtCR,EAAA,c"}