{"version":3,"names":["dbNotificationCss","DbNotificationStyle0","DbNotification","exports","this","getVariant","class_1","prototype","type","render","h","key","class","role","variant","name"],"sources":["src/components/db-notification/db-notification.scss?tag=db-notification","src/components/db-notification/db-notification.tsx"],"sourcesContent":["@import 'db-ui-core.general';\n@import 'notification';\n\n*[slot='prenotification'] {\n  padding-right: 10px;\n}\n\n*[slot='postnotification'] {\n  float: right;\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'db-notification',\n  styleUrl: 'db-notification.scss',\n  scoped: false\n})\nexport class DbNotification {\n  /**\n   * Variant will be added to the element containing the alert or status message\n   * that will be read aloud by screen readers.\n   */\n  @Prop({ reflect: true }) variant: 'alert' | 'status' = this.getVariant();\n\n  /**\n   * The type attribute is used to set the type of the notification, will change\n   * styling accordingly.\n   */\n  @Prop({ reflect: true }) type:\n    | 'error'\n    | 'informative'\n    | 'success'\n    | 'warning';\n\n  private getVariant() {\n    return this.type === 'error' || this.type === 'warning'\n      ? 'alert'\n      : 'status';\n  }\n\n  render() {\n    return (\n      <div\n        class=\"cmp-notification\"\n        role={this.variant}\n        data-type={this.type ? this.type : null}\n      >\n        <slot name=\"prenotification\"></slot>\n        <slot></slot>\n        <slot name=\"postnotification\"></slot>\n      </div>\n    );\n  }\n}\n"],"mappings":"0IAAA,IAAMA,EAAoB,osJAC1B,IAAAC,EAAeD,E,ICMFE,EAAcC,EAAA,6B,qCAK8BC,KAAKC,a,oBAYpDC,EAAAC,UAAAF,WAAA,WACN,OAAOD,KAAKI,OAAS,SAAWJ,KAAKI,OAAS,UAC1C,QACA,Q,EAGNF,EAAAC,UAAAE,OAAA,WACE,OACEC,EAAA,OAAAC,IAAA,2CACEC,MAAM,mBACNC,KAAMT,KAAKU,QAAO,YACPV,KAAKI,KAAOJ,KAAKI,KAAO,MAEnCE,EAAA,QAAAC,IAAA,2CAAMI,KAAK,oBACXL,EAAA,QAAAC,IAAA,6CACAD,EAAA,QAAAC,IAAA,2CAAMI,KAAK,qB,WAhCQ,I","ignoreList":[]}